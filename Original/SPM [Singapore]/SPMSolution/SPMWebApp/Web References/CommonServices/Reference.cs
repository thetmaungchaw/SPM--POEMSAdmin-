//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5448.
// 
#pragma warning disable 1591

namespace SPMWebApp.CommonServices {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CommonSPMServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CommonSPMService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RetrieveTeamCodeAndNameBySeriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveTeamAndNameByDealerCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveTeamCodeAndNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAllTeamCodeAndNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveDealerCodeAndNameByTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveDealerCodeAndNameByTeamNLoginIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrievePreferenceCodeAndNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAllDealerOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAllDealerByUserOrSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEmailTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveEmailTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveEmailTemplateByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmailTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmailTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccessRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveDealerCodeAndNameByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveMultipleDealerCodeAndNameByTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveProjectByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveTotalCommissionForUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAllProjectByProjectNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAllProjectByProjectNameByUserOrSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveProjectTotalCommByProjectIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CommonSPMService() {
            this.Url = global::SPMWebApp.Properties.Settings.Default.SPMWebApp_CommonServices_CommonSPMService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RetrieveTeamCodeAndNameBySeriesCompletedEventHandler RetrieveTeamCodeAndNameBySeriesCompleted;
        
        /// <remarks/>
        public event RetrieveTeamAndNameByDealerCodeCompletedEventHandler RetrieveTeamAndNameByDealerCodeCompleted;
        
        /// <remarks/>
        public event RetrieveTeamCodeAndNameCompletedEventHandler RetrieveTeamCodeAndNameCompleted;
        
        /// <remarks/>
        public event RetrieveAllTeamCodeAndNameCompletedEventHandler RetrieveAllTeamCodeAndNameCompleted;
        
        /// <remarks/>
        public event RetrieveDealerCodeAndNameByTeamCompletedEventHandler RetrieveDealerCodeAndNameByTeamCompleted;
        
        /// <remarks/>
        public event RetrieveDealerCodeAndNameByTeamNLoginIDCompletedEventHandler RetrieveDealerCodeAndNameByTeamNLoginIDCompleted;
        
        /// <remarks/>
        public event RetrievePreferenceCodeAndNameCompletedEventHandler RetrievePreferenceCodeAndNameCompleted;
        
        /// <remarks/>
        public event RetrieveAllDealerCompletedEventHandler RetrieveAllDealerCompleted;
        
        /// <remarks/>
        public event RetrieveAllDealerByUserOrSupervisorCompletedEventHandler RetrieveAllDealerByUserOrSupervisorCompleted;
        
        /// <remarks/>
        public event InsertEmailTemplateCompletedEventHandler InsertEmailTemplateCompleted;
        
        /// <remarks/>
        public event RetrieveEmailTemplateCompletedEventHandler RetrieveEmailTemplateCompleted;
        
        /// <remarks/>
        public event RetrieveEmailTemplateByIDCompletedEventHandler RetrieveEmailTemplateByIDCompleted;
        
        /// <remarks/>
        public event UpdateEmailTemplateCompletedEventHandler UpdateEmailTemplateCompleted;
        
        /// <remarks/>
        public event DeleteEmailTemplateCompletedEventHandler DeleteEmailTemplateCompleted;
        
        /// <remarks/>
        public event getAccessRightCompletedEventHandler getAccessRightCompleted;
        
        /// <remarks/>
        public event RetrieveDealerCodeAndNameByUserIDCompletedEventHandler RetrieveDealerCodeAndNameByUserIDCompleted;
        
        /// <remarks/>
        public event RetrieveMultipleDealerCodeAndNameByTeamCompletedEventHandler RetrieveMultipleDealerCodeAndNameByTeamCompleted;
        
        /// <remarks/>
        public event RetrieveProjectByUserIdCompletedEventHandler RetrieveProjectByUserIdCompleted;
        
        /// <remarks/>
        public event RetrieveTotalCommissionForUserIdCompletedEventHandler RetrieveTotalCommissionForUserIdCompleted;
        
        /// <remarks/>
        public event RetrieveAllProjectByProjectNameCompletedEventHandler RetrieveAllProjectByProjectNameCompleted;
        
        /// <remarks/>
        public event RetrieveAllProjectByProjectNameByUserOrSupervisorCompletedEventHandler RetrieveAllProjectByProjectNameByUserOrSupervisorCompleted;
        
        /// <remarks/>
        public event RetrieveProjectTotalCommByProjectIdCompletedEventHandler RetrieveProjectTotalCommByProjectIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveTeamCodeAndNameBySeries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveTeamCodeAndNameBySeries(string UserID, bool tSeries, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveTeamCodeAndNameBySeries", new object[] {
                        UserID,
                        tSeries,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveTeamCodeAndNameBySeriesAsync(string UserID, bool tSeries, string dbConnectionStr) {
            this.RetrieveTeamCodeAndNameBySeriesAsync(UserID, tSeries, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveTeamCodeAndNameBySeriesAsync(string UserID, bool tSeries, string dbConnectionStr, object userState) {
            if ((this.RetrieveTeamCodeAndNameBySeriesOperationCompleted == null)) {
                this.RetrieveTeamCodeAndNameBySeriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveTeamCodeAndNameBySeriesOperationCompleted);
            }
            this.InvokeAsync("RetrieveTeamCodeAndNameBySeries", new object[] {
                        UserID,
                        tSeries,
                        dbConnectionStr}, this.RetrieveTeamCodeAndNameBySeriesOperationCompleted, userState);
        }
        
        private void OnRetrieveTeamCodeAndNameBySeriesOperationCompleted(object arg) {
            if ((this.RetrieveTeamCodeAndNameBySeriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveTeamCodeAndNameBySeriesCompleted(this, new RetrieveTeamCodeAndNameBySeriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveTeamAndNameByDealerCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveTeamAndNameByDealerCode(string dealerCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveTeamAndNameByDealerCode", new object[] {
                        dealerCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveTeamAndNameByDealerCodeAsync(string dealerCode, string dbConnectionStr) {
            this.RetrieveTeamAndNameByDealerCodeAsync(dealerCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveTeamAndNameByDealerCodeAsync(string dealerCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveTeamAndNameByDealerCodeOperationCompleted == null)) {
                this.RetrieveTeamAndNameByDealerCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveTeamAndNameByDealerCodeOperationCompleted);
            }
            this.InvokeAsync("RetrieveTeamAndNameByDealerCode", new object[] {
                        dealerCode,
                        dbConnectionStr}, this.RetrieveTeamAndNameByDealerCodeOperationCompleted, userState);
        }
        
        private void OnRetrieveTeamAndNameByDealerCodeOperationCompleted(object arg) {
            if ((this.RetrieveTeamAndNameByDealerCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveTeamAndNameByDealerCodeCompleted(this, new RetrieveTeamAndNameByDealerCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveTeamCodeAndName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveTeamCodeAndName(string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveTeamCodeAndName", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveTeamCodeAndNameAsync(string dbConnectionStr) {
            this.RetrieveTeamCodeAndNameAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveTeamCodeAndNameAsync(string dbConnectionStr, object userState) {
            if ((this.RetrieveTeamCodeAndNameOperationCompleted == null)) {
                this.RetrieveTeamCodeAndNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveTeamCodeAndNameOperationCompleted);
            }
            this.InvokeAsync("RetrieveTeamCodeAndName", new object[] {
                        dbConnectionStr}, this.RetrieveTeamCodeAndNameOperationCompleted, userState);
        }
        
        private void OnRetrieveTeamCodeAndNameOperationCompleted(object arg) {
            if ((this.RetrieveTeamCodeAndNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveTeamCodeAndNameCompleted(this, new RetrieveTeamCodeAndNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAllTeamCodeAndName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAllTeamCodeAndName(string UserID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAllTeamCodeAndName", new object[] {
                        UserID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAllTeamCodeAndNameAsync(string UserID, string dbConnectionStr) {
            this.RetrieveAllTeamCodeAndNameAsync(UserID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAllTeamCodeAndNameAsync(string UserID, string dbConnectionStr, object userState) {
            if ((this.RetrieveAllTeamCodeAndNameOperationCompleted == null)) {
                this.RetrieveAllTeamCodeAndNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllTeamCodeAndNameOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllTeamCodeAndName", new object[] {
                        UserID,
                        dbConnectionStr}, this.RetrieveAllTeamCodeAndNameOperationCompleted, userState);
        }
        
        private void OnRetrieveAllTeamCodeAndNameOperationCompleted(object arg) {
            if ((this.RetrieveAllTeamCodeAndNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllTeamCodeAndNameCompleted(this, new RetrieveAllTeamCodeAndNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveDealerCodeAndNameByTeam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveDealerCodeAndNameByTeam(string teamCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveDealerCodeAndNameByTeam", new object[] {
                        teamCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveDealerCodeAndNameByTeamAsync(string teamCode, string dbConnectionStr) {
            this.RetrieveDealerCodeAndNameByTeamAsync(teamCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveDealerCodeAndNameByTeamAsync(string teamCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveDealerCodeAndNameByTeamOperationCompleted == null)) {
                this.RetrieveDealerCodeAndNameByTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveDealerCodeAndNameByTeamOperationCompleted);
            }
            this.InvokeAsync("RetrieveDealerCodeAndNameByTeam", new object[] {
                        teamCode,
                        dbConnectionStr}, this.RetrieveDealerCodeAndNameByTeamOperationCompleted, userState);
        }
        
        private void OnRetrieveDealerCodeAndNameByTeamOperationCompleted(object arg) {
            if ((this.RetrieveDealerCodeAndNameByTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveDealerCodeAndNameByTeamCompleted(this, new RetrieveDealerCodeAndNameByTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveDealerCodeAndNameByTeamNLoginID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveDealerCodeAndNameByTeamNLoginID(string teamCode, string loginid, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveDealerCodeAndNameByTeamNLoginID", new object[] {
                        teamCode,
                        loginid,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveDealerCodeAndNameByTeamNLoginIDAsync(string teamCode, string loginid, string dbConnectionStr) {
            this.RetrieveDealerCodeAndNameByTeamNLoginIDAsync(teamCode, loginid, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveDealerCodeAndNameByTeamNLoginIDAsync(string teamCode, string loginid, string dbConnectionStr, object userState) {
            if ((this.RetrieveDealerCodeAndNameByTeamNLoginIDOperationCompleted == null)) {
                this.RetrieveDealerCodeAndNameByTeamNLoginIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveDealerCodeAndNameByTeamNLoginIDOperationCompleted);
            }
            this.InvokeAsync("RetrieveDealerCodeAndNameByTeamNLoginID", new object[] {
                        teamCode,
                        loginid,
                        dbConnectionStr}, this.RetrieveDealerCodeAndNameByTeamNLoginIDOperationCompleted, userState);
        }
        
        private void OnRetrieveDealerCodeAndNameByTeamNLoginIDOperationCompleted(object arg) {
            if ((this.RetrieveDealerCodeAndNameByTeamNLoginIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveDealerCodeAndNameByTeamNLoginIDCompleted(this, new RetrieveDealerCodeAndNameByTeamNLoginIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrievePreferenceCodeAndName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrievePreferenceCodeAndName(string dbConnectionStr) {
            object[] results = this.Invoke("RetrievePreferenceCodeAndName", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrievePreferenceCodeAndNameAsync(string dbConnectionStr) {
            this.RetrievePreferenceCodeAndNameAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrievePreferenceCodeAndNameAsync(string dbConnectionStr, object userState) {
            if ((this.RetrievePreferenceCodeAndNameOperationCompleted == null)) {
                this.RetrievePreferenceCodeAndNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrievePreferenceCodeAndNameOperationCompleted);
            }
            this.InvokeAsync("RetrievePreferenceCodeAndName", new object[] {
                        dbConnectionStr}, this.RetrievePreferenceCodeAndNameOperationCompleted, userState);
        }
        
        private void OnRetrievePreferenceCodeAndNameOperationCompleted(object arg) {
            if ((this.RetrievePreferenceCodeAndNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrievePreferenceCodeAndNameCompleted(this, new RetrievePreferenceCodeAndNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAllDealer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAllDealer(string UserID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAllDealer", new object[] {
                        UserID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAllDealerAsync(string UserID, string dbConnectionStr) {
            this.RetrieveAllDealerAsync(UserID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAllDealerAsync(string UserID, string dbConnectionStr, object userState) {
            if ((this.RetrieveAllDealerOperationCompleted == null)) {
                this.RetrieveAllDealerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllDealerOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllDealer", new object[] {
                        UserID,
                        dbConnectionStr}, this.RetrieveAllDealerOperationCompleted, userState);
        }
        
        private void OnRetrieveAllDealerOperationCompleted(object arg) {
            if ((this.RetrieveAllDealerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllDealerCompleted(this, new RetrieveAllDealerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAllDealerByUserOrSupervisor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAllDealerByUserOrSupervisor(string Param, string UserID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAllDealerByUserOrSupervisor", new object[] {
                        Param,
                        UserID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAllDealerByUserOrSupervisorAsync(string Param, string UserID, string dbConnectionStr) {
            this.RetrieveAllDealerByUserOrSupervisorAsync(Param, UserID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAllDealerByUserOrSupervisorAsync(string Param, string UserID, string dbConnectionStr, object userState) {
            if ((this.RetrieveAllDealerByUserOrSupervisorOperationCompleted == null)) {
                this.RetrieveAllDealerByUserOrSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllDealerByUserOrSupervisorOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllDealerByUserOrSupervisor", new object[] {
                        Param,
                        UserID,
                        dbConnectionStr}, this.RetrieveAllDealerByUserOrSupervisorOperationCompleted, userState);
        }
        
        private void OnRetrieveAllDealerByUserOrSupervisorOperationCompleted(object arg) {
            if ((this.RetrieveAllDealerByUserOrSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllDealerByUserOrSupervisorCompleted(this, new RetrieveAllDealerByUserOrSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertEmailTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] InsertEmailTemplate(string templateName, string templateType, string subject, string contents, string dbConnectionStr) {
            object[] results = this.Invoke("InsertEmailTemplate", new object[] {
                        templateName,
                        templateType,
                        subject,
                        contents,
                        dbConnectionStr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertEmailTemplateAsync(string templateName, string templateType, string subject, string contents, string dbConnectionStr) {
            this.InsertEmailTemplateAsync(templateName, templateType, subject, contents, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void InsertEmailTemplateAsync(string templateName, string templateType, string subject, string contents, string dbConnectionStr, object userState) {
            if ((this.InsertEmailTemplateOperationCompleted == null)) {
                this.InsertEmailTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmailTemplateOperationCompleted);
            }
            this.InvokeAsync("InsertEmailTemplate", new object[] {
                        templateName,
                        templateType,
                        subject,
                        contents,
                        dbConnectionStr}, this.InsertEmailTemplateOperationCompleted, userState);
        }
        
        private void OnInsertEmailTemplateOperationCompleted(object arg) {
            if ((this.InsertEmailTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEmailTemplateCompleted(this, new InsertEmailTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveEmailTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveEmailTemplate(string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveEmailTemplate", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveEmailTemplateAsync(string dbConnectionStr) {
            this.RetrieveEmailTemplateAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveEmailTemplateAsync(string dbConnectionStr, object userState) {
            if ((this.RetrieveEmailTemplateOperationCompleted == null)) {
                this.RetrieveEmailTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveEmailTemplateOperationCompleted);
            }
            this.InvokeAsync("RetrieveEmailTemplate", new object[] {
                        dbConnectionStr}, this.RetrieveEmailTemplateOperationCompleted, userState);
        }
        
        private void OnRetrieveEmailTemplateOperationCompleted(object arg) {
            if ((this.RetrieveEmailTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveEmailTemplateCompleted(this, new RetrieveEmailTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveEmailTemplateByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveEmailTemplateByID(string dbConnectionStr, string templateID) {
            object[] results = this.Invoke("RetrieveEmailTemplateByID", new object[] {
                        dbConnectionStr,
                        templateID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveEmailTemplateByIDAsync(string dbConnectionStr, string templateID) {
            this.RetrieveEmailTemplateByIDAsync(dbConnectionStr, templateID, null);
        }
        
        /// <remarks/>
        public void RetrieveEmailTemplateByIDAsync(string dbConnectionStr, string templateID, object userState) {
            if ((this.RetrieveEmailTemplateByIDOperationCompleted == null)) {
                this.RetrieveEmailTemplateByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveEmailTemplateByIDOperationCompleted);
            }
            this.InvokeAsync("RetrieveEmailTemplateByID", new object[] {
                        dbConnectionStr,
                        templateID}, this.RetrieveEmailTemplateByIDOperationCompleted, userState);
        }
        
        private void OnRetrieveEmailTemplateByIDOperationCompleted(object arg) {
            if ((this.RetrieveEmailTemplateByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveEmailTemplateByIDCompleted(this, new RetrieveEmailTemplateByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmailTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] UpdateEmailTemplate(string templateID, string templateType, string subject, string contents, string dbConnectionStr) {
            object[] results = this.Invoke("UpdateEmailTemplate", new object[] {
                        templateID,
                        templateType,
                        subject,
                        contents,
                        dbConnectionStr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmailTemplateAsync(string templateID, string templateType, string subject, string contents, string dbConnectionStr) {
            this.UpdateEmailTemplateAsync(templateID, templateType, subject, contents, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void UpdateEmailTemplateAsync(string templateID, string templateType, string subject, string contents, string dbConnectionStr, object userState) {
            if ((this.UpdateEmailTemplateOperationCompleted == null)) {
                this.UpdateEmailTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmailTemplateOperationCompleted);
            }
            this.InvokeAsync("UpdateEmailTemplate", new object[] {
                        templateID,
                        templateType,
                        subject,
                        contents,
                        dbConnectionStr}, this.UpdateEmailTemplateOperationCompleted, userState);
        }
        
        private void OnUpdateEmailTemplateOperationCompleted(object arg) {
            if ((this.UpdateEmailTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmailTemplateCompleted(this, new UpdateEmailTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmailTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DeleteEmailTemplate(string dbConnectionStr, string templateID) {
            object[] results = this.Invoke("DeleteEmailTemplate", new object[] {
                        dbConnectionStr,
                        templateID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmailTemplateAsync(string dbConnectionStr, string templateID) {
            this.DeleteEmailTemplateAsync(dbConnectionStr, templateID, null);
        }
        
        /// <remarks/>
        public void DeleteEmailTemplateAsync(string dbConnectionStr, string templateID, object userState) {
            if ((this.DeleteEmailTemplateOperationCompleted == null)) {
                this.DeleteEmailTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmailTemplateOperationCompleted);
            }
            this.InvokeAsync("DeleteEmailTemplate", new object[] {
                        dbConnectionStr,
                        templateID}, this.DeleteEmailTemplateOperationCompleted, userState);
        }
        
        private void OnDeleteEmailTemplateOperationCompleted(object arg) {
            if ((this.DeleteEmailTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmailTemplateCompleted(this, new DeleteEmailTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccessRight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAccessRight(string pageFunction, string userId, string dbConnectionStr) {
            object[] results = this.Invoke("getAccessRight", new object[] {
                        pageFunction,
                        userId,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAccessRightAsync(string pageFunction, string userId, string dbConnectionStr) {
            this.getAccessRightAsync(pageFunction, userId, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void getAccessRightAsync(string pageFunction, string userId, string dbConnectionStr, object userState) {
            if ((this.getAccessRightOperationCompleted == null)) {
                this.getAccessRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccessRightOperationCompleted);
            }
            this.InvokeAsync("getAccessRight", new object[] {
                        pageFunction,
                        userId,
                        dbConnectionStr}, this.getAccessRightOperationCompleted, userState);
        }
        
        private void OngetAccessRightOperationCompleted(object arg) {
            if ((this.getAccessRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccessRightCompleted(this, new getAccessRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveDealerCodeAndNameByUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveDealerCodeAndNameByUserID(string userId, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveDealerCodeAndNameByUserID", new object[] {
                        userId,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveDealerCodeAndNameByUserIDAsync(string userId, string dbConnectionStr) {
            this.RetrieveDealerCodeAndNameByUserIDAsync(userId, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveDealerCodeAndNameByUserIDAsync(string userId, string dbConnectionStr, object userState) {
            if ((this.RetrieveDealerCodeAndNameByUserIDOperationCompleted == null)) {
                this.RetrieveDealerCodeAndNameByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveDealerCodeAndNameByUserIDOperationCompleted);
            }
            this.InvokeAsync("RetrieveDealerCodeAndNameByUserID", new object[] {
                        userId,
                        dbConnectionStr}, this.RetrieveDealerCodeAndNameByUserIDOperationCompleted, userState);
        }
        
        private void OnRetrieveDealerCodeAndNameByUserIDOperationCompleted(object arg) {
            if ((this.RetrieveDealerCodeAndNameByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveDealerCodeAndNameByUserIDCompleted(this, new RetrieveDealerCodeAndNameByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveMultipleDealerCodeAndNameByTeam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveMultipleDealerCodeAndNameByTeam(string teamCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveMultipleDealerCodeAndNameByTeam", new object[] {
                        teamCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveMultipleDealerCodeAndNameByTeamAsync(string teamCode, string dbConnectionStr) {
            this.RetrieveMultipleDealerCodeAndNameByTeamAsync(teamCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveMultipleDealerCodeAndNameByTeamAsync(string teamCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveMultipleDealerCodeAndNameByTeamOperationCompleted == null)) {
                this.RetrieveMultipleDealerCodeAndNameByTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveMultipleDealerCodeAndNameByTeamOperationCompleted);
            }
            this.InvokeAsync("RetrieveMultipleDealerCodeAndNameByTeam", new object[] {
                        teamCode,
                        dbConnectionStr}, this.RetrieveMultipleDealerCodeAndNameByTeamOperationCompleted, userState);
        }
        
        private void OnRetrieveMultipleDealerCodeAndNameByTeamOperationCompleted(object arg) {
            if ((this.RetrieveMultipleDealerCodeAndNameByTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveMultipleDealerCodeAndNameByTeamCompleted(this, new RetrieveMultipleDealerCodeAndNameByTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveProjectByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveProjectByUserId(string userId, string filterByProjectName, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveProjectByUserId", new object[] {
                        userId,
                        filterByProjectName,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveProjectByUserIdAsync(string userId, string filterByProjectName, string dbConnectionStr) {
            this.RetrieveProjectByUserIdAsync(userId, filterByProjectName, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveProjectByUserIdAsync(string userId, string filterByProjectName, string dbConnectionStr, object userState) {
            if ((this.RetrieveProjectByUserIdOperationCompleted == null)) {
                this.RetrieveProjectByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveProjectByUserIdOperationCompleted);
            }
            this.InvokeAsync("RetrieveProjectByUserId", new object[] {
                        userId,
                        filterByProjectName,
                        dbConnectionStr}, this.RetrieveProjectByUserIdOperationCompleted, userState);
        }
        
        private void OnRetrieveProjectByUserIdOperationCompleted(object arg) {
            if ((this.RetrieveProjectByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveProjectByUserIdCompleted(this, new RetrieveProjectByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveTotalCommissionForUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveTotalCommissionForUserId(string dbConnectionStr, string userId) {
            object[] results = this.Invoke("RetrieveTotalCommissionForUserId", new object[] {
                        dbConnectionStr,
                        userId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveTotalCommissionForUserIdAsync(string dbConnectionStr, string userId) {
            this.RetrieveTotalCommissionForUserIdAsync(dbConnectionStr, userId, null);
        }
        
        /// <remarks/>
        public void RetrieveTotalCommissionForUserIdAsync(string dbConnectionStr, string userId, object userState) {
            if ((this.RetrieveTotalCommissionForUserIdOperationCompleted == null)) {
                this.RetrieveTotalCommissionForUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveTotalCommissionForUserIdOperationCompleted);
            }
            this.InvokeAsync("RetrieveTotalCommissionForUserId", new object[] {
                        dbConnectionStr,
                        userId}, this.RetrieveTotalCommissionForUserIdOperationCompleted, userState);
        }
        
        private void OnRetrieveTotalCommissionForUserIdOperationCompleted(object arg) {
            if ((this.RetrieveTotalCommissionForUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveTotalCommissionForUserIdCompleted(this, new RetrieveTotalCommissionForUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAllProjectByProjectName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAllProjectByProjectName(string PID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAllProjectByProjectName", new object[] {
                        PID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAllProjectByProjectNameAsync(string PID, string dbConnectionStr) {
            this.RetrieveAllProjectByProjectNameAsync(PID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAllProjectByProjectNameAsync(string PID, string dbConnectionStr, object userState) {
            if ((this.RetrieveAllProjectByProjectNameOperationCompleted == null)) {
                this.RetrieveAllProjectByProjectNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllProjectByProjectNameOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllProjectByProjectName", new object[] {
                        PID,
                        dbConnectionStr}, this.RetrieveAllProjectByProjectNameOperationCompleted, userState);
        }
        
        private void OnRetrieveAllProjectByProjectNameOperationCompleted(object arg) {
            if ((this.RetrieveAllProjectByProjectNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllProjectByProjectNameCompleted(this, new RetrieveAllProjectByProjectNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAllProjectByProjectNameByUserOrSupervisor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAllProjectByProjectNameByUserOrSupervisor(string Param, string UserID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAllProjectByProjectNameByUserOrSupervisor", new object[] {
                        Param,
                        UserID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAllProjectByProjectNameByUserOrSupervisorAsync(string Param, string UserID, string dbConnectionStr) {
            this.RetrieveAllProjectByProjectNameByUserOrSupervisorAsync(Param, UserID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAllProjectByProjectNameByUserOrSupervisorAsync(string Param, string UserID, string dbConnectionStr, object userState) {
            if ((this.RetrieveAllProjectByProjectNameByUserOrSupervisorOperationCompleted == null)) {
                this.RetrieveAllProjectByProjectNameByUserOrSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllProjectByProjectNameByUserOrSupervisorOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllProjectByProjectNameByUserOrSupervisor", new object[] {
                        Param,
                        UserID,
                        dbConnectionStr}, this.RetrieveAllProjectByProjectNameByUserOrSupervisorOperationCompleted, userState);
        }
        
        private void OnRetrieveAllProjectByProjectNameByUserOrSupervisorOperationCompleted(object arg) {
            if ((this.RetrieveAllProjectByProjectNameByUserOrSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllProjectByProjectNameByUserOrSupervisorCompleted(this, new RetrieveAllProjectByProjectNameByUserOrSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveProjectTotalCommByProjectId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveProjectTotalCommByProjectId(string dbConnectionStr, string projectId) {
            object[] results = this.Invoke("RetrieveProjectTotalCommByProjectId", new object[] {
                        dbConnectionStr,
                        projectId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveProjectTotalCommByProjectIdAsync(string dbConnectionStr, string projectId) {
            this.RetrieveProjectTotalCommByProjectIdAsync(dbConnectionStr, projectId, null);
        }
        
        /// <remarks/>
        public void RetrieveProjectTotalCommByProjectIdAsync(string dbConnectionStr, string projectId, object userState) {
            if ((this.RetrieveProjectTotalCommByProjectIdOperationCompleted == null)) {
                this.RetrieveProjectTotalCommByProjectIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveProjectTotalCommByProjectIdOperationCompleted);
            }
            this.InvokeAsync("RetrieveProjectTotalCommByProjectId", new object[] {
                        dbConnectionStr,
                        projectId}, this.RetrieveProjectTotalCommByProjectIdOperationCompleted, userState);
        }
        
        private void OnRetrieveProjectTotalCommByProjectIdOperationCompleted(object arg) {
            if ((this.RetrieveProjectTotalCommByProjectIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveProjectTotalCommByProjectIdCompleted(this, new RetrieveProjectTotalCommByProjectIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveTeamCodeAndNameBySeriesCompletedEventHandler(object sender, RetrieveTeamCodeAndNameBySeriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveTeamCodeAndNameBySeriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveTeamCodeAndNameBySeriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveTeamAndNameByDealerCodeCompletedEventHandler(object sender, RetrieveTeamAndNameByDealerCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveTeamAndNameByDealerCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveTeamAndNameByDealerCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveTeamCodeAndNameCompletedEventHandler(object sender, RetrieveTeamCodeAndNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveTeamCodeAndNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveTeamCodeAndNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAllTeamCodeAndNameCompletedEventHandler(object sender, RetrieveAllTeamCodeAndNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllTeamCodeAndNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAllTeamCodeAndNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveDealerCodeAndNameByTeamCompletedEventHandler(object sender, RetrieveDealerCodeAndNameByTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveDealerCodeAndNameByTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveDealerCodeAndNameByTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveDealerCodeAndNameByTeamNLoginIDCompletedEventHandler(object sender, RetrieveDealerCodeAndNameByTeamNLoginIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveDealerCodeAndNameByTeamNLoginIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveDealerCodeAndNameByTeamNLoginIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrievePreferenceCodeAndNameCompletedEventHandler(object sender, RetrievePreferenceCodeAndNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrievePreferenceCodeAndNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrievePreferenceCodeAndNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAllDealerCompletedEventHandler(object sender, RetrieveAllDealerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllDealerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAllDealerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAllDealerByUserOrSupervisorCompletedEventHandler(object sender, RetrieveAllDealerByUserOrSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllDealerByUserOrSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAllDealerByUserOrSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void InsertEmailTemplateCompletedEventHandler(object sender, InsertEmailTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEmailTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEmailTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveEmailTemplateCompletedEventHandler(object sender, RetrieveEmailTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveEmailTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveEmailTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveEmailTemplateByIDCompletedEventHandler(object sender, RetrieveEmailTemplateByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveEmailTemplateByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveEmailTemplateByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateEmailTemplateCompletedEventHandler(object sender, UpdateEmailTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmailTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmailTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void DeleteEmailTemplateCompletedEventHandler(object sender, DeleteEmailTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmailTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmailTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getAccessRightCompletedEventHandler(object sender, getAccessRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccessRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccessRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveDealerCodeAndNameByUserIDCompletedEventHandler(object sender, RetrieveDealerCodeAndNameByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveDealerCodeAndNameByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveDealerCodeAndNameByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveMultipleDealerCodeAndNameByTeamCompletedEventHandler(object sender, RetrieveMultipleDealerCodeAndNameByTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveMultipleDealerCodeAndNameByTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveMultipleDealerCodeAndNameByTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveProjectByUserIdCompletedEventHandler(object sender, RetrieveProjectByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveProjectByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveProjectByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveTotalCommissionForUserIdCompletedEventHandler(object sender, RetrieveTotalCommissionForUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveTotalCommissionForUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveTotalCommissionForUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAllProjectByProjectNameCompletedEventHandler(object sender, RetrieveAllProjectByProjectNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllProjectByProjectNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAllProjectByProjectNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAllProjectByProjectNameByUserOrSupervisorCompletedEventHandler(object sender, RetrieveAllProjectByProjectNameByUserOrSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllProjectByProjectNameByUserOrSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAllProjectByProjectNameByUserOrSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveProjectTotalCommByProjectIdCompletedEventHandler(object sender, RetrieveProjectTotalCommByProjectIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveProjectTotalCommByProjectIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveProjectTotalCommByProjectIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591