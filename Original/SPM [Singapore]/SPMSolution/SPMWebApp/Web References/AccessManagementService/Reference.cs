//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5448.
// 
#pragma warning disable 1591

namespace SPMWebApp.AccessManagementService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AccessManagementServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AccessManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RetrieveUserAccessRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveUserMenuOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveUserIdAndNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveDealerInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserAccessRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveUserRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveUserRolesByRoleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignedRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveUserRoleRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveMaxUserRoleIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveProjectByProjectNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignedClientInfoByProjOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveRoleNamesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AccessManagementService() {
            this.Url = global::SPMWebApp.Properties.Settings.Default.SPMWebApp_AccessManagementService_AccessManagementService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RetrieveUserAccessRightsCompletedEventHandler RetrieveUserAccessRightsCompleted;
        
        /// <remarks/>
        public event RetrieveUserMenuOptionsCompletedEventHandler RetrieveUserMenuOptionsCompleted;
        
        /// <remarks/>
        public event RetrieveUserIdAndNameCompletedEventHandler RetrieveUserIdAndNameCompleted;
        
        /// <remarks/>
        public event RetrieveDealerInformationCompletedEventHandler RetrieveDealerInformationCompleted;
        
        /// <remarks/>
        public event UpdateUserAccessRightsCompletedEventHandler UpdateUserAccessRightsCompleted;
        
        /// <remarks/>
        public event RetrieveUserRolesCompletedEventHandler RetrieveUserRolesCompleted;
        
        /// <remarks/>
        public event RetrieveUserRolesByRoleIdCompletedEventHandler RetrieveUserRolesByRoleIdCompleted;
        
        /// <remarks/>
        public event UpdateUserRoleCompletedEventHandler UpdateUserRoleCompleted;
        
        /// <remarks/>
        public event RetrieveAssignedRoleCompletedEventHandler RetrieveAssignedRoleCompleted;
        
        /// <remarks/>
        public event RetrieveUserRoleRightsCompletedEventHandler RetrieveUserRoleRightsCompleted;
        
        /// <remarks/>
        public event RetrieveMaxUserRoleIDCompletedEventHandler RetrieveMaxUserRoleIDCompleted;
        
        /// <remarks/>
        public event RetrieveProjectByProjectNameCompletedEventHandler RetrieveProjectByProjectNameCompleted;
        
        /// <remarks/>
        public event RetrieveAssignedClientInfoByProjCompletedEventHandler RetrieveAssignedClientInfoByProjCompleted;
        
        /// <remarks/>
        public event RetrieveRoleNamesCompletedEventHandler RetrieveRoleNamesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveUserAccessRights", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveUserAccessRights(string userId, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveUserAccessRights", new object[] {
                        userId,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveUserAccessRightsAsync(string userId, string dbConnectionStr) {
            this.RetrieveUserAccessRightsAsync(userId, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveUserAccessRightsAsync(string userId, string dbConnectionStr, object userState) {
            if ((this.RetrieveUserAccessRightsOperationCompleted == null)) {
                this.RetrieveUserAccessRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveUserAccessRightsOperationCompleted);
            }
            this.InvokeAsync("RetrieveUserAccessRights", new object[] {
                        userId,
                        dbConnectionStr}, this.RetrieveUserAccessRightsOperationCompleted, userState);
        }
        
        private void OnRetrieveUserAccessRightsOperationCompleted(object arg) {
            if ((this.RetrieveUserAccessRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveUserAccessRightsCompleted(this, new RetrieveUserAccessRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveUserMenuOptions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveUserMenuOptions(string userId, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveUserMenuOptions", new object[] {
                        userId,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveUserMenuOptionsAsync(string userId, string dbConnectionStr) {
            this.RetrieveUserMenuOptionsAsync(userId, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveUserMenuOptionsAsync(string userId, string dbConnectionStr, object userState) {
            if ((this.RetrieveUserMenuOptionsOperationCompleted == null)) {
                this.RetrieveUserMenuOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveUserMenuOptionsOperationCompleted);
            }
            this.InvokeAsync("RetrieveUserMenuOptions", new object[] {
                        userId,
                        dbConnectionStr}, this.RetrieveUserMenuOptionsOperationCompleted, userState);
        }
        
        private void OnRetrieveUserMenuOptionsOperationCompleted(object arg) {
            if ((this.RetrieveUserMenuOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveUserMenuOptionsCompleted(this, new RetrieveUserMenuOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveUserIdAndName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveUserIdAndName(string UserID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveUserIdAndName", new object[] {
                        UserID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveUserIdAndNameAsync(string UserID, string dbConnectionStr) {
            this.RetrieveUserIdAndNameAsync(UserID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveUserIdAndNameAsync(string UserID, string dbConnectionStr, object userState) {
            if ((this.RetrieveUserIdAndNameOperationCompleted == null)) {
                this.RetrieveUserIdAndNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveUserIdAndNameOperationCompleted);
            }
            this.InvokeAsync("RetrieveUserIdAndName", new object[] {
                        UserID,
                        dbConnectionStr}, this.RetrieveUserIdAndNameOperationCompleted, userState);
        }
        
        private void OnRetrieveUserIdAndNameOperationCompleted(object arg) {
            if ((this.RetrieveUserIdAndNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveUserIdAndNameCompleted(this, new RetrieveUserIdAndNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveDealerInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveDealerInformation(string dbConnectionStr, string userId) {
            object[] results = this.Invoke("RetrieveDealerInformation", new object[] {
                        dbConnectionStr,
                        userId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveDealerInformationAsync(string dbConnectionStr, string userId) {
            this.RetrieveDealerInformationAsync(dbConnectionStr, userId, null);
        }
        
        /// <remarks/>
        public void RetrieveDealerInformationAsync(string dbConnectionStr, string userId, object userState) {
            if ((this.RetrieveDealerInformationOperationCompleted == null)) {
                this.RetrieveDealerInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveDealerInformationOperationCompleted);
            }
            this.InvokeAsync("RetrieveDealerInformation", new object[] {
                        dbConnectionStr,
                        userId}, this.RetrieveDealerInformationOperationCompleted, userState);
        }
        
        private void OnRetrieveDealerInformationOperationCompleted(object arg) {
            if ((this.RetrieveDealerInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveDealerInformationCompleted(this, new RetrieveDealerInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserAccessRights", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateUserAccessRights(string dbConnectionStr, string userId, string roleId, System.Data.DataSet userAccessRightsUpdate, string actionUserId) {
            object[] results = this.Invoke("UpdateUserAccessRights", new object[] {
                        dbConnectionStr,
                        userId,
                        roleId,
                        userAccessRightsUpdate,
                        actionUserId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAccessRightsAsync(string dbConnectionStr, string userId, string roleId, System.Data.DataSet userAccessRightsUpdate, string actionUserId) {
            this.UpdateUserAccessRightsAsync(dbConnectionStr, userId, roleId, userAccessRightsUpdate, actionUserId, null);
        }
        
        /// <remarks/>
        public void UpdateUserAccessRightsAsync(string dbConnectionStr, string userId, string roleId, System.Data.DataSet userAccessRightsUpdate, string actionUserId, object userState) {
            if ((this.UpdateUserAccessRightsOperationCompleted == null)) {
                this.UpdateUserAccessRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserAccessRightsOperationCompleted);
            }
            this.InvokeAsync("UpdateUserAccessRights", new object[] {
                        dbConnectionStr,
                        userId,
                        roleId,
                        userAccessRightsUpdate,
                        actionUserId}, this.UpdateUserAccessRightsOperationCompleted, userState);
        }
        
        private void OnUpdateUserAccessRightsOperationCompleted(object arg) {
            if ((this.UpdateUserAccessRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserAccessRightsCompleted(this, new UpdateUserAccessRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveUserRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveUserRoles(string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveUserRoles", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveUserRolesAsync(string dbConnectionStr) {
            this.RetrieveUserRolesAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveUserRolesAsync(string dbConnectionStr, object userState) {
            if ((this.RetrieveUserRolesOperationCompleted == null)) {
                this.RetrieveUserRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveUserRolesOperationCompleted);
            }
            this.InvokeAsync("RetrieveUserRoles", new object[] {
                        dbConnectionStr}, this.RetrieveUserRolesOperationCompleted, userState);
        }
        
        private void OnRetrieveUserRolesOperationCompleted(object arg) {
            if ((this.RetrieveUserRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveUserRolesCompleted(this, new RetrieveUserRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveUserRolesByRoleId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveUserRolesByRoleId(string dbConnectionStr, string roleId) {
            object[] results = this.Invoke("RetrieveUserRolesByRoleId", new object[] {
                        dbConnectionStr,
                        roleId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveUserRolesByRoleIdAsync(string dbConnectionStr, string roleId) {
            this.RetrieveUserRolesByRoleIdAsync(dbConnectionStr, roleId, null);
        }
        
        /// <remarks/>
        public void RetrieveUserRolesByRoleIdAsync(string dbConnectionStr, string roleId, object userState) {
            if ((this.RetrieveUserRolesByRoleIdOperationCompleted == null)) {
                this.RetrieveUserRolesByRoleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveUserRolesByRoleIdOperationCompleted);
            }
            this.InvokeAsync("RetrieveUserRolesByRoleId", new object[] {
                        dbConnectionStr,
                        roleId}, this.RetrieveUserRolesByRoleIdOperationCompleted, userState);
        }
        
        private void OnRetrieveUserRolesByRoleIdOperationCompleted(object arg) {
            if ((this.RetrieveUserRolesByRoleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveUserRolesByRoleIdCompleted(this, new RetrieveUserRolesByRoleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateUserRole(string dbConnectionStr, string roleId, string roleName, string roleDes, System.Data.DataSet userRoleUpdate, string actionUserId) {
            object[] results = this.Invoke("UpdateUserRole", new object[] {
                        dbConnectionStr,
                        roleId,
                        roleName,
                        roleDes,
                        userRoleUpdate,
                        actionUserId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserRoleAsync(string dbConnectionStr, string roleId, string roleName, string roleDes, System.Data.DataSet userRoleUpdate, string actionUserId) {
            this.UpdateUserRoleAsync(dbConnectionStr, roleId, roleName, roleDes, userRoleUpdate, actionUserId, null);
        }
        
        /// <remarks/>
        public void UpdateUserRoleAsync(string dbConnectionStr, string roleId, string roleName, string roleDes, System.Data.DataSet userRoleUpdate, string actionUserId, object userState) {
            if ((this.UpdateUserRoleOperationCompleted == null)) {
                this.UpdateUserRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserRoleOperationCompleted);
            }
            this.InvokeAsync("UpdateUserRole", new object[] {
                        dbConnectionStr,
                        roleId,
                        roleName,
                        roleDes,
                        userRoleUpdate,
                        actionUserId}, this.UpdateUserRoleOperationCompleted, userState);
        }
        
        private void OnUpdateUserRoleOperationCompleted(object arg) {
            if ((this.UpdateUserRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserRoleCompleted(this, new UpdateUserRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignedRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignedRole(string dbConnectionStr, string roleId) {
            object[] results = this.Invoke("RetrieveAssignedRole", new object[] {
                        dbConnectionStr,
                        roleId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignedRoleAsync(string dbConnectionStr, string roleId) {
            this.RetrieveAssignedRoleAsync(dbConnectionStr, roleId, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignedRoleAsync(string dbConnectionStr, string roleId, object userState) {
            if ((this.RetrieveAssignedRoleOperationCompleted == null)) {
                this.RetrieveAssignedRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignedRoleOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignedRole", new object[] {
                        dbConnectionStr,
                        roleId}, this.RetrieveAssignedRoleOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignedRoleOperationCompleted(object arg) {
            if ((this.RetrieveAssignedRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignedRoleCompleted(this, new RetrieveAssignedRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveUserRoleRights", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveUserRoleRights(string roleId, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveUserRoleRights", new object[] {
                        roleId,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveUserRoleRightsAsync(string roleId, string dbConnectionStr) {
            this.RetrieveUserRoleRightsAsync(roleId, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveUserRoleRightsAsync(string roleId, string dbConnectionStr, object userState) {
            if ((this.RetrieveUserRoleRightsOperationCompleted == null)) {
                this.RetrieveUserRoleRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveUserRoleRightsOperationCompleted);
            }
            this.InvokeAsync("RetrieveUserRoleRights", new object[] {
                        roleId,
                        dbConnectionStr}, this.RetrieveUserRoleRightsOperationCompleted, userState);
        }
        
        private void OnRetrieveUserRoleRightsOperationCompleted(object arg) {
            if ((this.RetrieveUserRoleRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveUserRoleRightsCompleted(this, new RetrieveUserRoleRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveMaxUserRoleID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveMaxUserRoleID(string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveMaxUserRoleID", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveMaxUserRoleIDAsync(string dbConnectionStr) {
            this.RetrieveMaxUserRoleIDAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveMaxUserRoleIDAsync(string dbConnectionStr, object userState) {
            if ((this.RetrieveMaxUserRoleIDOperationCompleted == null)) {
                this.RetrieveMaxUserRoleIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveMaxUserRoleIDOperationCompleted);
            }
            this.InvokeAsync("RetrieveMaxUserRoleID", new object[] {
                        dbConnectionStr}, this.RetrieveMaxUserRoleIDOperationCompleted, userState);
        }
        
        private void OnRetrieveMaxUserRoleIDOperationCompleted(object arg) {
            if ((this.RetrieveMaxUserRoleIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveMaxUserRoleIDCompleted(this, new RetrieveMaxUserRoleIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveProjectByProjectName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveProjectByProjectName(string projName, string UserID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveProjectByProjectName", new object[] {
                        projName,
                        UserID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveProjectByProjectNameAsync(string projName, string UserID, string dbConnectionStr) {
            this.RetrieveProjectByProjectNameAsync(projName, UserID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveProjectByProjectNameAsync(string projName, string UserID, string dbConnectionStr, object userState) {
            if ((this.RetrieveProjectByProjectNameOperationCompleted == null)) {
                this.RetrieveProjectByProjectNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveProjectByProjectNameOperationCompleted);
            }
            this.InvokeAsync("RetrieveProjectByProjectName", new object[] {
                        projName,
                        UserID,
                        dbConnectionStr}, this.RetrieveProjectByProjectNameOperationCompleted, userState);
        }
        
        private void OnRetrieveProjectByProjectNameOperationCompleted(object arg) {
            if ((this.RetrieveProjectByProjectNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveProjectByProjectNameCompleted(this, new RetrieveProjectByProjectNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignedClientInfoByProj", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignedClientInfoByProj(string ProjID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAssignedClientInfoByProj", new object[] {
                        ProjID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignedClientInfoByProjAsync(string ProjID, string dbConnectionStr) {
            this.RetrieveAssignedClientInfoByProjAsync(ProjID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignedClientInfoByProjAsync(string ProjID, string dbConnectionStr, object userState) {
            if ((this.RetrieveAssignedClientInfoByProjOperationCompleted == null)) {
                this.RetrieveAssignedClientInfoByProjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignedClientInfoByProjOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignedClientInfoByProj", new object[] {
                        ProjID,
                        dbConnectionStr}, this.RetrieveAssignedClientInfoByProjOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignedClientInfoByProjOperationCompleted(object arg) {
            if ((this.RetrieveAssignedClientInfoByProjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignedClientInfoByProjCompleted(this, new RetrieveAssignedClientInfoByProjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveRoleNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveRoleNames(string roleName, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveRoleNames", new object[] {
                        roleName,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveRoleNamesAsync(string roleName, string dbConnectionStr) {
            this.RetrieveRoleNamesAsync(roleName, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveRoleNamesAsync(string roleName, string dbConnectionStr, object userState) {
            if ((this.RetrieveRoleNamesOperationCompleted == null)) {
                this.RetrieveRoleNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveRoleNamesOperationCompleted);
            }
            this.InvokeAsync("RetrieveRoleNames", new object[] {
                        roleName,
                        dbConnectionStr}, this.RetrieveRoleNamesOperationCompleted, userState);
        }
        
        private void OnRetrieveRoleNamesOperationCompleted(object arg) {
            if ((this.RetrieveRoleNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveRoleNamesCompleted(this, new RetrieveRoleNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveUserAccessRightsCompletedEventHandler(object sender, RetrieveUserAccessRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveUserAccessRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveUserAccessRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveUserMenuOptionsCompletedEventHandler(object sender, RetrieveUserMenuOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveUserMenuOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveUserMenuOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveUserIdAndNameCompletedEventHandler(object sender, RetrieveUserIdAndNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveUserIdAndNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveUserIdAndNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveDealerInformationCompletedEventHandler(object sender, RetrieveDealerInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveDealerInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveDealerInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateUserAccessRightsCompletedEventHandler(object sender, UpdateUserAccessRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserAccessRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserAccessRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveUserRolesCompletedEventHandler(object sender, RetrieveUserRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveUserRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveUserRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveUserRolesByRoleIdCompletedEventHandler(object sender, RetrieveUserRolesByRoleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveUserRolesByRoleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveUserRolesByRoleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateUserRoleCompletedEventHandler(object sender, UpdateUserRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAssignedRoleCompletedEventHandler(object sender, RetrieveAssignedRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignedRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignedRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveUserRoleRightsCompletedEventHandler(object sender, RetrieveUserRoleRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveUserRoleRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveUserRoleRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveMaxUserRoleIDCompletedEventHandler(object sender, RetrieveMaxUserRoleIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveMaxUserRoleIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveMaxUserRoleIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveProjectByProjectNameCompletedEventHandler(object sender, RetrieveProjectByProjectNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveProjectByProjectNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveProjectByProjectNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAssignedClientInfoByProjCompletedEventHandler(object sender, RetrieveAssignedClientInfoByProjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignedClientInfoByProjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignedClientInfoByProjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveRoleNamesCompletedEventHandler(object sender, RetrieveRoleNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveRoleNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveRoleNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591