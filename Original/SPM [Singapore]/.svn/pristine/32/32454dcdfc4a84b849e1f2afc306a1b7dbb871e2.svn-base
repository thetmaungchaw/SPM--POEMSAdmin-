//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5448.
// 
#pragma warning disable 1591

namespace SPMWebApp.AssignmentManagementService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AssignmentManagementSoap", Namespace="http://tempuri.org/")]
    public partial class AssignmentManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RetrieveClientsForAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveTeamsForAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveDealerAndTeamForAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveDealerByTeamCodeForAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteClientAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchDeleteClientAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignmentHistoryByCriteriaOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignedClientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignedClientInfoByUserOrSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareForAssignedClientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAllDealerOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAllDealerByUserOrSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignReportByDealerOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignReportByFollowUpDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveFollowUpDateByProjectIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCrossEnabledTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCrossEnabledDealerOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignmentDateByDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignmentDateByDateRangeByUserOrSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveProjectAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAccountTypeValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProjectInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertProjectAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAllProjectInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientInfoByAccNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveDealerEmailByDelaerCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveTeamEmailByTeamCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEmailLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveProjectByProjectNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveProjectByProjectNameByUserOrSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveClientCallsByProjectIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignedProjectByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCommissionEarnedByProjectIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignedClientInfoByProjOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignedClientInfoByProjByUserOrSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignmentHistoryByProjNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCommissionEarnedHistoryByCriteriaOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCommissionEarnedHistoryByProjectOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AssignmentManagement() {
            this.Url = global::SPMWebApp.Properties.Settings.Default.SPMWebApp_AssignmentManagementService_AssignmentManagement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RetrieveClientsForAssignmentCompletedEventHandler RetrieveClientsForAssignmentCompleted;
        
        /// <remarks/>
        public event RetrieveTeamsForAssignmentCompletedEventHandler RetrieveTeamsForAssignmentCompleted;
        
        /// <remarks/>
        public event RetrieveDealerAndTeamForAssignmentCompletedEventHandler RetrieveDealerAndTeamForAssignmentCompleted;
        
        /// <remarks/>
        public event RetrieveDealerByTeamCodeForAssignmentCompletedEventHandler RetrieveDealerByTeamCodeForAssignmentCompleted;
        
        /// <remarks/>
        public event InsertAssignmentCompletedEventHandler InsertAssignmentCompleted;
        
        /// <remarks/>
        public event DeleteClientAssignmentCompletedEventHandler DeleteClientAssignmentCompleted;
        
        /// <remarks/>
        public event BatchDeleteClientAssignmentCompletedEventHandler BatchDeleteClientAssignmentCompleted;
        
        /// <remarks/>
        public event RetrieveAssignmentHistoryByCriteriaCompletedEventHandler RetrieveAssignmentHistoryByCriteriaCompleted;
        
        /// <remarks/>
        public event RetrieveAssignedClientInfoCompletedEventHandler RetrieveAssignedClientInfoCompleted;
        
        /// <remarks/>
        public event RetrieveAssignedClientInfoByUserOrSupervisorCompletedEventHandler RetrieveAssignedClientInfoByUserOrSupervisorCompleted;
        
        /// <remarks/>
        public event PrepareForAssignedClientInfoCompletedEventHandler PrepareForAssignedClientInfoCompleted;
        
        /// <remarks/>
        public event RetrieveAllDealerCompletedEventHandler RetrieveAllDealerCompleted;
        
        /// <remarks/>
        public event RetrieveAllDealerByUserOrSupervisorCompletedEventHandler RetrieveAllDealerByUserOrSupervisorCompleted;
        
        /// <remarks/>
        public event RetrieveAssignReportByDealerCompletedEventHandler RetrieveAssignReportByDealerCompleted;
        
        /// <remarks/>
        public event RetrieveAssignReportByFollowUpDateCompletedEventHandler RetrieveAssignReportByFollowUpDateCompleted;
        
        /// <remarks/>
        public event RetrieveFollowUpDateByProjectIDCompletedEventHandler RetrieveFollowUpDateByProjectIDCompleted;
        
        /// <remarks/>
        public event RetrieveCrossEnabledTeamCompletedEventHandler RetrieveCrossEnabledTeamCompleted;
        
        /// <remarks/>
        public event RetrieveCrossEnabledDealerCompletedEventHandler RetrieveCrossEnabledDealerCompleted;
        
        /// <remarks/>
        public event RetrieveAssignmentDateByDateRangeCompletedEventHandler RetrieveAssignmentDateByDateRangeCompleted;
        
        /// <remarks/>
        public event RetrieveAssignmentDateByDateRangeByUserOrSupervisorCompletedEventHandler RetrieveAssignmentDateByDateRangeByUserOrSupervisorCompleted;
        
        /// <remarks/>
        public event RetrieveProjectAttachmentCompletedEventHandler RetrieveProjectAttachmentCompleted;
        
        /// <remarks/>
        public event RetrieveAccountTypeValuesCompletedEventHandler RetrieveAccountTypeValuesCompleted;
        
        /// <remarks/>
        public event InsertProjectInfoCompletedEventHandler InsertProjectInfoCompleted;
        
        /// <remarks/>
        public event InsertProjectAttachmentCompletedEventHandler InsertProjectAttachmentCompleted;
        
        /// <remarks/>
        public event RetrieveAllProjectInformationCompletedEventHandler RetrieveAllProjectInformationCompleted;
        
        /// <remarks/>
        public event GetClientInfoByAccNoCompletedEventHandler GetClientInfoByAccNoCompleted;
        
        /// <remarks/>
        public event RetrieveDealerEmailByDelaerCodeCompletedEventHandler RetrieveDealerEmailByDelaerCodeCompleted;
        
        /// <remarks/>
        public event RetrieveTeamEmailByTeamCodeCompletedEventHandler RetrieveTeamEmailByTeamCodeCompleted;
        
        /// <remarks/>
        public event InsertEmailLogCompletedEventHandler InsertEmailLogCompleted;
        
        /// <remarks/>
        public event RetrieveProjectByProjectNameCompletedEventHandler RetrieveProjectByProjectNameCompleted;
        
        /// <remarks/>
        public event RetrieveProjectByProjectNameByUserOrSupervisorCompletedEventHandler RetrieveProjectByProjectNameByUserOrSupervisorCompleted;
        
        /// <remarks/>
        public event RetrieveClientCallsByProjectIdCompletedEventHandler RetrieveClientCallsByProjectIdCompleted;
        
        /// <remarks/>
        public event RetrieveAssignedProjectByUserIdCompletedEventHandler RetrieveAssignedProjectByUserIdCompleted;
        
        /// <remarks/>
        public event RetrieveCommissionEarnedByProjectIdCompletedEventHandler RetrieveCommissionEarnedByProjectIdCompleted;
        
        /// <remarks/>
        public event RetrieveAssignedClientInfoByProjCompletedEventHandler RetrieveAssignedClientInfoByProjCompleted;
        
        /// <remarks/>
        public event RetrieveAssignedClientInfoByProjByUserOrSupervisorCompletedEventHandler RetrieveAssignedClientInfoByProjByUserOrSupervisorCompleted;
        
        /// <remarks/>
        public event RetrieveAssignmentHistoryByProjNameCompletedEventHandler RetrieveAssignmentHistoryByProjNameCompleted;
        
        /// <remarks/>
        public event RetrieveCommissionEarnedHistoryByCriteriaCompletedEventHandler RetrieveCommissionEarnedHistoryByCriteriaCompleted;
        
        /// <remarks/>
        public event RetrieveCommissionEarnedHistoryByProjectCompletedEventHandler RetrieveCommissionEarnedHistoryByProjectCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveClientsForAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveClientsForAssignment(
                    string teamCode, 
                    bool _2NFlag, 
                    bool emailFlag, 
                    bool mobileFlag, 
                    string accountFromDate, 
                    string accountToDate, 
                    string dbConnectionStr, 
                    bool contHisFlag, 
                    string contHis, 
                    bool trustAccFlag, 
                    string trustAcc, 
                    bool MMFFlag, 
                    string MMF, 
                    bool TPeriod, 
                    string period, 
                    bool SMarketValue, 
                    string MarketValue, 
                    string AccountTypes) {
            object[] results = this.Invoke("RetrieveClientsForAssignment", new object[] {
                        teamCode,
                        _2NFlag,
                        emailFlag,
                        mobileFlag,
                        accountFromDate,
                        accountToDate,
                        dbConnectionStr,
                        contHisFlag,
                        contHis,
                        trustAccFlag,
                        trustAcc,
                        MMFFlag,
                        MMF,
                        TPeriod,
                        period,
                        SMarketValue,
                        MarketValue,
                        AccountTypes});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveClientsForAssignmentAsync(
                    string teamCode, 
                    bool _2NFlag, 
                    bool emailFlag, 
                    bool mobileFlag, 
                    string accountFromDate, 
                    string accountToDate, 
                    string dbConnectionStr, 
                    bool contHisFlag, 
                    string contHis, 
                    bool trustAccFlag, 
                    string trustAcc, 
                    bool MMFFlag, 
                    string MMF, 
                    bool TPeriod, 
                    string period, 
                    bool SMarketValue, 
                    string MarketValue, 
                    string AccountTypes) {
            this.RetrieveClientsForAssignmentAsync(teamCode, _2NFlag, emailFlag, mobileFlag, accountFromDate, accountToDate, dbConnectionStr, contHisFlag, contHis, trustAccFlag, trustAcc, MMFFlag, MMF, TPeriod, period, SMarketValue, MarketValue, AccountTypes, null);
        }
        
        /// <remarks/>
        public void RetrieveClientsForAssignmentAsync(
                    string teamCode, 
                    bool _2NFlag, 
                    bool emailFlag, 
                    bool mobileFlag, 
                    string accountFromDate, 
                    string accountToDate, 
                    string dbConnectionStr, 
                    bool contHisFlag, 
                    string contHis, 
                    bool trustAccFlag, 
                    string trustAcc, 
                    bool MMFFlag, 
                    string MMF, 
                    bool TPeriod, 
                    string period, 
                    bool SMarketValue, 
                    string MarketValue, 
                    string AccountTypes, 
                    object userState) {
            if ((this.RetrieveClientsForAssignmentOperationCompleted == null)) {
                this.RetrieveClientsForAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveClientsForAssignmentOperationCompleted);
            }
            this.InvokeAsync("RetrieveClientsForAssignment", new object[] {
                        teamCode,
                        _2NFlag,
                        emailFlag,
                        mobileFlag,
                        accountFromDate,
                        accountToDate,
                        dbConnectionStr,
                        contHisFlag,
                        contHis,
                        trustAccFlag,
                        trustAcc,
                        MMFFlag,
                        MMF,
                        TPeriod,
                        period,
                        SMarketValue,
                        MarketValue,
                        AccountTypes}, this.RetrieveClientsForAssignmentOperationCompleted, userState);
        }
        
        private void OnRetrieveClientsForAssignmentOperationCompleted(object arg) {
            if ((this.RetrieveClientsForAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveClientsForAssignmentCompleted(this, new RetrieveClientsForAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveTeamsForAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveTeamsForAssignment(string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveTeamsForAssignment", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveTeamsForAssignmentAsync(string dbConnectionStr) {
            this.RetrieveTeamsForAssignmentAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveTeamsForAssignmentAsync(string dbConnectionStr, object userState) {
            if ((this.RetrieveTeamsForAssignmentOperationCompleted == null)) {
                this.RetrieveTeamsForAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveTeamsForAssignmentOperationCompleted);
            }
            this.InvokeAsync("RetrieveTeamsForAssignment", new object[] {
                        dbConnectionStr}, this.RetrieveTeamsForAssignmentOperationCompleted, userState);
        }
        
        private void OnRetrieveTeamsForAssignmentOperationCompleted(object arg) {
            if ((this.RetrieveTeamsForAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveTeamsForAssignmentCompleted(this, new RetrieveTeamsForAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveDealerAndTeamForAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveDealerAndTeamForAssignment(string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveDealerAndTeamForAssignment", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveDealerAndTeamForAssignmentAsync(string dbConnectionStr) {
            this.RetrieveDealerAndTeamForAssignmentAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveDealerAndTeamForAssignmentAsync(string dbConnectionStr, object userState) {
            if ((this.RetrieveDealerAndTeamForAssignmentOperationCompleted == null)) {
                this.RetrieveDealerAndTeamForAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveDealerAndTeamForAssignmentOperationCompleted);
            }
            this.InvokeAsync("RetrieveDealerAndTeamForAssignment", new object[] {
                        dbConnectionStr}, this.RetrieveDealerAndTeamForAssignmentOperationCompleted, userState);
        }
        
        private void OnRetrieveDealerAndTeamForAssignmentOperationCompleted(object arg) {
            if ((this.RetrieveDealerAndTeamForAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveDealerAndTeamForAssignmentCompleted(this, new RetrieveDealerAndTeamForAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveDealerByTeamCodeForAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveDealerByTeamCodeForAssignment(string teamCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveDealerByTeamCodeForAssignment", new object[] {
                        teamCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveDealerByTeamCodeForAssignmentAsync(string teamCode, string dbConnectionStr) {
            this.RetrieveDealerByTeamCodeForAssignmentAsync(teamCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveDealerByTeamCodeForAssignmentAsync(string teamCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveDealerByTeamCodeForAssignmentOperationCompleted == null)) {
                this.RetrieveDealerByTeamCodeForAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveDealerByTeamCodeForAssignmentOperationCompleted);
            }
            this.InvokeAsync("RetrieveDealerByTeamCodeForAssignment", new object[] {
                        teamCode,
                        dbConnectionStr}, this.RetrieveDealerByTeamCodeForAssignmentOperationCompleted, userState);
        }
        
        private void OnRetrieveDealerByTeamCodeForAssignmentOperationCompleted(object arg) {
            if ((this.RetrieveDealerByTeamCodeForAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveDealerByTeamCodeForAssignmentCompleted(this, new RetrieveDealerByTeamCodeForAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] InsertAssignment(System.Data.DataSet ds, string dbConnectionStr) {
            object[] results = this.Invoke("InsertAssignment", new object[] {
                        ds,
                        dbConnectionStr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertAssignmentAsync(System.Data.DataSet ds, string dbConnectionStr) {
            this.InsertAssignmentAsync(ds, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void InsertAssignmentAsync(System.Data.DataSet ds, string dbConnectionStr, object userState) {
            if ((this.InsertAssignmentOperationCompleted == null)) {
                this.InsertAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAssignmentOperationCompleted);
            }
            this.InvokeAsync("InsertAssignment", new object[] {
                        ds,
                        dbConnectionStr}, this.InsertAssignmentOperationCompleted, userState);
        }
        
        private void OnInsertAssignmentOperationCompleted(object arg) {
            if ((this.InsertAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAssignmentCompleted(this, new InsertAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteClientAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] DeleteClientAssignment(string dealerCode, string accountNumber, string assignDate, string cutOffDate, string modifiedUser, string modifiedDate, string newModifiedUser, string dbConnectionStr) {
            object[] results = this.Invoke("DeleteClientAssignment", new object[] {
                        dealerCode,
                        accountNumber,
                        assignDate,
                        cutOffDate,
                        modifiedUser,
                        modifiedDate,
                        newModifiedUser,
                        dbConnectionStr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteClientAssignmentAsync(string dealerCode, string accountNumber, string assignDate, string cutOffDate, string modifiedUser, string modifiedDate, string newModifiedUser, string dbConnectionStr) {
            this.DeleteClientAssignmentAsync(dealerCode, accountNumber, assignDate, cutOffDate, modifiedUser, modifiedDate, newModifiedUser, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void DeleteClientAssignmentAsync(string dealerCode, string accountNumber, string assignDate, string cutOffDate, string modifiedUser, string modifiedDate, string newModifiedUser, string dbConnectionStr, object userState) {
            if ((this.DeleteClientAssignmentOperationCompleted == null)) {
                this.DeleteClientAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteClientAssignmentOperationCompleted);
            }
            this.InvokeAsync("DeleteClientAssignment", new object[] {
                        dealerCode,
                        accountNumber,
                        assignDate,
                        cutOffDate,
                        modifiedUser,
                        modifiedDate,
                        newModifiedUser,
                        dbConnectionStr}, this.DeleteClientAssignmentOperationCompleted, userState);
        }
        
        private void OnDeleteClientAssignmentOperationCompleted(object arg) {
            if ((this.DeleteClientAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteClientAssignmentCompleted(this, new DeleteClientAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchDeleteClientAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatchDeleteClientAssignment(System.Data.DataSet dsAssignDelete, string dbConnectionStr) {
            object[] results = this.Invoke("BatchDeleteClientAssignment", new object[] {
                        dsAssignDelete,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatchDeleteClientAssignmentAsync(System.Data.DataSet dsAssignDelete, string dbConnectionStr) {
            this.BatchDeleteClientAssignmentAsync(dsAssignDelete, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void BatchDeleteClientAssignmentAsync(System.Data.DataSet dsAssignDelete, string dbConnectionStr, object userState) {
            if ((this.BatchDeleteClientAssignmentOperationCompleted == null)) {
                this.BatchDeleteClientAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchDeleteClientAssignmentOperationCompleted);
            }
            this.InvokeAsync("BatchDeleteClientAssignment", new object[] {
                        dsAssignDelete,
                        dbConnectionStr}, this.BatchDeleteClientAssignmentOperationCompleted, userState);
        }
        
        private void OnBatchDeleteClientAssignmentOperationCompleted(object arg) {
            if ((this.BatchDeleteClientAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchDeleteClientAssignmentCompleted(this, new BatchDeleteClientAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignmentHistoryByCriteria", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignmentHistoryByCriteria(string dealerCode, string accountNo, string nric, string fromDate, string toDate, bool retradeFlag, string Param, string UserID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAssignmentHistoryByCriteria", new object[] {
                        dealerCode,
                        accountNo,
                        nric,
                        fromDate,
                        toDate,
                        retradeFlag,
                        Param,
                        UserID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignmentHistoryByCriteriaAsync(string dealerCode, string accountNo, string nric, string fromDate, string toDate, bool retradeFlag, string Param, string UserID, string dbConnectionStr) {
            this.RetrieveAssignmentHistoryByCriteriaAsync(dealerCode, accountNo, nric, fromDate, toDate, retradeFlag, Param, UserID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignmentHistoryByCriteriaAsync(string dealerCode, string accountNo, string nric, string fromDate, string toDate, bool retradeFlag, string Param, string UserID, string dbConnectionStr, object userState) {
            if ((this.RetrieveAssignmentHistoryByCriteriaOperationCompleted == null)) {
                this.RetrieveAssignmentHistoryByCriteriaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignmentHistoryByCriteriaOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignmentHistoryByCriteria", new object[] {
                        dealerCode,
                        accountNo,
                        nric,
                        fromDate,
                        toDate,
                        retradeFlag,
                        Param,
                        UserID,
                        dbConnectionStr}, this.RetrieveAssignmentHistoryByCriteriaOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignmentHistoryByCriteriaOperationCompleted(object arg) {
            if ((this.RetrieveAssignmentHistoryByCriteriaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignmentHistoryByCriteriaCompleted(this, new RetrieveAssignmentHistoryByCriteriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignedClientInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignedClientInfo(string teamCode, string dealerCode, string accountNo, string assignDate, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAssignedClientInfo", new object[] {
                        teamCode,
                        dealerCode,
                        accountNo,
                        assignDate,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignedClientInfoAsync(string teamCode, string dealerCode, string accountNo, string assignDate, string dbConnectionStr) {
            this.RetrieveAssignedClientInfoAsync(teamCode, dealerCode, accountNo, assignDate, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignedClientInfoAsync(string teamCode, string dealerCode, string accountNo, string assignDate, string dbConnectionStr, object userState) {
            if ((this.RetrieveAssignedClientInfoOperationCompleted == null)) {
                this.RetrieveAssignedClientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignedClientInfoOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignedClientInfo", new object[] {
                        teamCode,
                        dealerCode,
                        accountNo,
                        assignDate,
                        dbConnectionStr}, this.RetrieveAssignedClientInfoOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignedClientInfoOperationCompleted(object arg) {
            if ((this.RetrieveAssignedClientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignedClientInfoCompleted(this, new RetrieveAssignedClientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignedClientInfoByUserOrSupervisor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignedClientInfoByUserOrSupervisor(string assignDate, string Param, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAssignedClientInfoByUserOrSupervisor", new object[] {
                        assignDate,
                        Param,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignedClientInfoByUserOrSupervisorAsync(string assignDate, string Param, string dbConnectionStr) {
            this.RetrieveAssignedClientInfoByUserOrSupervisorAsync(assignDate, Param, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignedClientInfoByUserOrSupervisorAsync(string assignDate, string Param, string dbConnectionStr, object userState) {
            if ((this.RetrieveAssignedClientInfoByUserOrSupervisorOperationCompleted == null)) {
                this.RetrieveAssignedClientInfoByUserOrSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignedClientInfoByUserOrSupervisorOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignedClientInfoByUserOrSupervisor", new object[] {
                        assignDate,
                        Param,
                        dbConnectionStr}, this.RetrieveAssignedClientInfoByUserOrSupervisorOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignedClientInfoByUserOrSupervisorOperationCompleted(object arg) {
            if ((this.RetrieveAssignedClientInfoByUserOrSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignedClientInfoByUserOrSupervisorCompleted(this, new RetrieveAssignedClientInfoByUserOrSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrepareForAssignedClientInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrepareForAssignedClientInfo(string UserID, string dbConnectionStr) {
            object[] results = this.Invoke("PrepareForAssignedClientInfo", new object[] {
                        UserID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareForAssignedClientInfoAsync(string UserID, string dbConnectionStr) {
            this.PrepareForAssignedClientInfoAsync(UserID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void PrepareForAssignedClientInfoAsync(string UserID, string dbConnectionStr, object userState) {
            if ((this.PrepareForAssignedClientInfoOperationCompleted == null)) {
                this.PrepareForAssignedClientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareForAssignedClientInfoOperationCompleted);
            }
            this.InvokeAsync("PrepareForAssignedClientInfo", new object[] {
                        UserID,
                        dbConnectionStr}, this.PrepareForAssignedClientInfoOperationCompleted, userState);
        }
        
        private void OnPrepareForAssignedClientInfoOperationCompleted(object arg) {
            if ((this.PrepareForAssignedClientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareForAssignedClientInfoCompleted(this, new PrepareForAssignedClientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAllDealer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAllDealer(string UserID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAllDealer", new object[] {
                        UserID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAllDealerAsync(string UserID, string dbConnectionStr) {
            this.RetrieveAllDealerAsync(UserID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAllDealerAsync(string UserID, string dbConnectionStr, object userState) {
            if ((this.RetrieveAllDealerOperationCompleted == null)) {
                this.RetrieveAllDealerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllDealerOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllDealer", new object[] {
                        UserID,
                        dbConnectionStr}, this.RetrieveAllDealerOperationCompleted, userState);
        }
        
        private void OnRetrieveAllDealerOperationCompleted(object arg) {
            if ((this.RetrieveAllDealerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllDealerCompleted(this, new RetrieveAllDealerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAllDealerByUserOrSupervisor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAllDealerByUserOrSupervisor(string Param, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAllDealerByUserOrSupervisor", new object[] {
                        Param,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAllDealerByUserOrSupervisorAsync(string Param, string dbConnectionStr) {
            this.RetrieveAllDealerByUserOrSupervisorAsync(Param, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAllDealerByUserOrSupervisorAsync(string Param, string dbConnectionStr, object userState) {
            if ((this.RetrieveAllDealerByUserOrSupervisorOperationCompleted == null)) {
                this.RetrieveAllDealerByUserOrSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllDealerByUserOrSupervisorOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllDealerByUserOrSupervisor", new object[] {
                        Param,
                        dbConnectionStr}, this.RetrieveAllDealerByUserOrSupervisorOperationCompleted, userState);
        }
        
        private void OnRetrieveAllDealerByUserOrSupervisorOperationCompleted(object arg) {
            if ((this.RetrieveAllDealerByUserOrSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllDealerByUserOrSupervisorCompleted(this, new RetrieveAllDealerByUserOrSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignReportByDealer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignReportByDealer(string dealerCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAssignReportByDealer", new object[] {
                        dealerCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignReportByDealerAsync(string dealerCode, string dbConnectionStr) {
            this.RetrieveAssignReportByDealerAsync(dealerCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignReportByDealerAsync(string dealerCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveAssignReportByDealerOperationCompleted == null)) {
                this.RetrieveAssignReportByDealerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignReportByDealerOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignReportByDealer", new object[] {
                        dealerCode,
                        dbConnectionStr}, this.RetrieveAssignReportByDealerOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignReportByDealerOperationCompleted(object arg) {
            if ((this.RetrieveAssignReportByDealerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignReportByDealerCompleted(this, new RetrieveAssignReportByDealerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignReportByFollowUpDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignReportByFollowUpDate(string dealerCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAssignReportByFollowUpDate", new object[] {
                        dealerCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignReportByFollowUpDateAsync(string dealerCode, string dbConnectionStr) {
            this.RetrieveAssignReportByFollowUpDateAsync(dealerCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignReportByFollowUpDateAsync(string dealerCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveAssignReportByFollowUpDateOperationCompleted == null)) {
                this.RetrieveAssignReportByFollowUpDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignReportByFollowUpDateOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignReportByFollowUpDate", new object[] {
                        dealerCode,
                        dbConnectionStr}, this.RetrieveAssignReportByFollowUpDateOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignReportByFollowUpDateOperationCompleted(object arg) {
            if ((this.RetrieveAssignReportByFollowUpDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignReportByFollowUpDateCompleted(this, new RetrieveAssignReportByFollowUpDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveFollowUpDateByProjectID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveFollowUpDateByProjectID(string projectID, string dealerCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveFollowUpDateByProjectID", new object[] {
                        projectID,
                        dealerCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveFollowUpDateByProjectIDAsync(string projectID, string dealerCode, string dbConnectionStr) {
            this.RetrieveFollowUpDateByProjectIDAsync(projectID, dealerCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveFollowUpDateByProjectIDAsync(string projectID, string dealerCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveFollowUpDateByProjectIDOperationCompleted == null)) {
                this.RetrieveFollowUpDateByProjectIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveFollowUpDateByProjectIDOperationCompleted);
            }
            this.InvokeAsync("RetrieveFollowUpDateByProjectID", new object[] {
                        projectID,
                        dealerCode,
                        dbConnectionStr}, this.RetrieveFollowUpDateByProjectIDOperationCompleted, userState);
        }
        
        private void OnRetrieveFollowUpDateByProjectIDOperationCompleted(object arg) {
            if ((this.RetrieveFollowUpDateByProjectIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveFollowUpDateByProjectIDCompleted(this, new RetrieveFollowUpDateByProjectIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCrossEnabledTeam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCrossEnabledTeam(string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveCrossEnabledTeam", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCrossEnabledTeamAsync(string dbConnectionStr) {
            this.RetrieveCrossEnabledTeamAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveCrossEnabledTeamAsync(string dbConnectionStr, object userState) {
            if ((this.RetrieveCrossEnabledTeamOperationCompleted == null)) {
                this.RetrieveCrossEnabledTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCrossEnabledTeamOperationCompleted);
            }
            this.InvokeAsync("RetrieveCrossEnabledTeam", new object[] {
                        dbConnectionStr}, this.RetrieveCrossEnabledTeamOperationCompleted, userState);
        }
        
        private void OnRetrieveCrossEnabledTeamOperationCompleted(object arg) {
            if ((this.RetrieveCrossEnabledTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCrossEnabledTeamCompleted(this, new RetrieveCrossEnabledTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCrossEnabledDealer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCrossEnabledDealer(string crossTeamCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveCrossEnabledDealer", new object[] {
                        crossTeamCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCrossEnabledDealerAsync(string crossTeamCode, string dbConnectionStr) {
            this.RetrieveCrossEnabledDealerAsync(crossTeamCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveCrossEnabledDealerAsync(string crossTeamCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveCrossEnabledDealerOperationCompleted == null)) {
                this.RetrieveCrossEnabledDealerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCrossEnabledDealerOperationCompleted);
            }
            this.InvokeAsync("RetrieveCrossEnabledDealer", new object[] {
                        crossTeamCode,
                        dbConnectionStr}, this.RetrieveCrossEnabledDealerOperationCompleted, userState);
        }
        
        private void OnRetrieveCrossEnabledDealerOperationCompleted(object arg) {
            if ((this.RetrieveCrossEnabledDealerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCrossEnabledDealerCompleted(this, new RetrieveCrossEnabledDealerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignmentDateByDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignmentDateByDateRange(string UserID, string fromDate, string toDate, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAssignmentDateByDateRange", new object[] {
                        UserID,
                        fromDate,
                        toDate,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignmentDateByDateRangeAsync(string UserID, string fromDate, string toDate, string dbConnectionStr) {
            this.RetrieveAssignmentDateByDateRangeAsync(UserID, fromDate, toDate, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignmentDateByDateRangeAsync(string UserID, string fromDate, string toDate, string dbConnectionStr, object userState) {
            if ((this.RetrieveAssignmentDateByDateRangeOperationCompleted == null)) {
                this.RetrieveAssignmentDateByDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignmentDateByDateRangeOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignmentDateByDateRange", new object[] {
                        UserID,
                        fromDate,
                        toDate,
                        dbConnectionStr}, this.RetrieveAssignmentDateByDateRangeOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignmentDateByDateRangeOperationCompleted(object arg) {
            if ((this.RetrieveAssignmentDateByDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignmentDateByDateRangeCompleted(this, new RetrieveAssignmentDateByDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignmentDateByDateRangeByUserOrSupervisor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignmentDateByDateRangeByUserOrSupervisor(string UserID, string fromDate, string toDate, string Param, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAssignmentDateByDateRangeByUserOrSupervisor", new object[] {
                        UserID,
                        fromDate,
                        toDate,
                        Param,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignmentDateByDateRangeByUserOrSupervisorAsync(string UserID, string fromDate, string toDate, string Param, string dbConnectionStr) {
            this.RetrieveAssignmentDateByDateRangeByUserOrSupervisorAsync(UserID, fromDate, toDate, Param, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignmentDateByDateRangeByUserOrSupervisorAsync(string UserID, string fromDate, string toDate, string Param, string dbConnectionStr, object userState) {
            if ((this.RetrieveAssignmentDateByDateRangeByUserOrSupervisorOperationCompleted == null)) {
                this.RetrieveAssignmentDateByDateRangeByUserOrSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignmentDateByDateRangeByUserOrSupervisorOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignmentDateByDateRangeByUserOrSupervisor", new object[] {
                        UserID,
                        fromDate,
                        toDate,
                        Param,
                        dbConnectionStr}, this.RetrieveAssignmentDateByDateRangeByUserOrSupervisorOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignmentDateByDateRangeByUserOrSupervisorOperationCompleted(object arg) {
            if ((this.RetrieveAssignmentDateByDateRangeByUserOrSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignmentDateByDateRangeByUserOrSupervisorCompleted(this, new RetrieveAssignmentDateByDateRangeByUserOrSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveProjectAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveProjectAttachment(string projectID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveProjectAttachment", new object[] {
                        projectID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveProjectAttachmentAsync(string projectID, string dbConnectionStr) {
            this.RetrieveProjectAttachmentAsync(projectID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveProjectAttachmentAsync(string projectID, string dbConnectionStr, object userState) {
            if ((this.RetrieveProjectAttachmentOperationCompleted == null)) {
                this.RetrieveProjectAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveProjectAttachmentOperationCompleted);
            }
            this.InvokeAsync("RetrieveProjectAttachment", new object[] {
                        projectID,
                        dbConnectionStr}, this.RetrieveProjectAttachmentOperationCompleted, userState);
        }
        
        private void OnRetrieveProjectAttachmentOperationCompleted(object arg) {
            if ((this.RetrieveProjectAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveProjectAttachmentCompleted(this, new RetrieveProjectAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAccountTypeValues", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAccountTypeValues(string[] accList, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAccountTypeValues", new object[] {
                        accList,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAccountTypeValuesAsync(string[] accList, string dbConnectionStr) {
            this.RetrieveAccountTypeValuesAsync(accList, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAccountTypeValuesAsync(string[] accList, string dbConnectionStr, object userState) {
            if ((this.RetrieveAccountTypeValuesOperationCompleted == null)) {
                this.RetrieveAccountTypeValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAccountTypeValuesOperationCompleted);
            }
            this.InvokeAsync("RetrieveAccountTypeValues", new object[] {
                        accList,
                        dbConnectionStr}, this.RetrieveAccountTypeValuesOperationCompleted, userState);
        }
        
        private void OnRetrieveAccountTypeValuesOperationCompleted(object arg) {
            if ((this.RetrieveAccountTypeValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAccountTypeValuesCompleted(this, new RetrieveAccountTypeValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertProjectInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] InsertProjectInfo(string ProjectName, string ProjectObj, string ProjectType, string FilePath, System.DateTime AssignDate, System.DateTime CutOffDate, string dbConnectionStr) {
            object[] results = this.Invoke("InsertProjectInfo", new object[] {
                        ProjectName,
                        ProjectObj,
                        ProjectType,
                        FilePath,
                        AssignDate,
                        CutOffDate,
                        dbConnectionStr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertProjectInfoAsync(string ProjectName, string ProjectObj, string ProjectType, string FilePath, System.DateTime AssignDate, System.DateTime CutOffDate, string dbConnectionStr) {
            this.InsertProjectInfoAsync(ProjectName, ProjectObj, ProjectType, FilePath, AssignDate, CutOffDate, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void InsertProjectInfoAsync(string ProjectName, string ProjectObj, string ProjectType, string FilePath, System.DateTime AssignDate, System.DateTime CutOffDate, string dbConnectionStr, object userState) {
            if ((this.InsertProjectInfoOperationCompleted == null)) {
                this.InsertProjectInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProjectInfoOperationCompleted);
            }
            this.InvokeAsync("InsertProjectInfo", new object[] {
                        ProjectName,
                        ProjectObj,
                        ProjectType,
                        FilePath,
                        AssignDate,
                        CutOffDate,
                        dbConnectionStr}, this.InsertProjectInfoOperationCompleted, userState);
        }
        
        private void OnInsertProjectInfoOperationCompleted(object arg) {
            if ((this.InsertProjectInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProjectInfoCompleted(this, new InsertProjectInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertProjectAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] InsertProjectAttachment(string FilePath, string FileName, string FileExtension, string FileSize, string ProjectID, string dbConnectionStr) {
            object[] results = this.Invoke("InsertProjectAttachment", new object[] {
                        FilePath,
                        FileName,
                        FileExtension,
                        FileSize,
                        ProjectID,
                        dbConnectionStr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertProjectAttachmentAsync(string FilePath, string FileName, string FileExtension, string FileSize, string ProjectID, string dbConnectionStr) {
            this.InsertProjectAttachmentAsync(FilePath, FileName, FileExtension, FileSize, ProjectID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void InsertProjectAttachmentAsync(string FilePath, string FileName, string FileExtension, string FileSize, string ProjectID, string dbConnectionStr, object userState) {
            if ((this.InsertProjectAttachmentOperationCompleted == null)) {
                this.InsertProjectAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertProjectAttachmentOperationCompleted);
            }
            this.InvokeAsync("InsertProjectAttachment", new object[] {
                        FilePath,
                        FileName,
                        FileExtension,
                        FileSize,
                        ProjectID,
                        dbConnectionStr}, this.InsertProjectAttachmentOperationCompleted, userState);
        }
        
        private void OnInsertProjectAttachmentOperationCompleted(object arg) {
            if ((this.InsertProjectAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertProjectAttachmentCompleted(this, new InsertProjectAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAllProjectInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAllProjectInformation(string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAllProjectInformation", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAllProjectInformationAsync(string dbConnectionStr) {
            this.RetrieveAllProjectInformationAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAllProjectInformationAsync(string dbConnectionStr, object userState) {
            if ((this.RetrieveAllProjectInformationOperationCompleted == null)) {
                this.RetrieveAllProjectInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllProjectInformationOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllProjectInformation", new object[] {
                        dbConnectionStr}, this.RetrieveAllProjectInformationOperationCompleted, userState);
        }
        
        private void OnRetrieveAllProjectInformationOperationCompleted(object arg) {
            if ((this.RetrieveAllProjectInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllProjectInformationCompleted(this, new RetrieveAllProjectInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientInfoByAccNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClientInfoByAccNo(string AcctNo, string dbConnectionStr) {
            object[] results = this.Invoke("GetClientInfoByAccNo", new object[] {
                        AcctNo,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientInfoByAccNoAsync(string AcctNo, string dbConnectionStr) {
            this.GetClientInfoByAccNoAsync(AcctNo, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void GetClientInfoByAccNoAsync(string AcctNo, string dbConnectionStr, object userState) {
            if ((this.GetClientInfoByAccNoOperationCompleted == null)) {
                this.GetClientInfoByAccNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientInfoByAccNoOperationCompleted);
            }
            this.InvokeAsync("GetClientInfoByAccNo", new object[] {
                        AcctNo,
                        dbConnectionStr}, this.GetClientInfoByAccNoOperationCompleted, userState);
        }
        
        private void OnGetClientInfoByAccNoOperationCompleted(object arg) {
            if ((this.GetClientInfoByAccNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientInfoByAccNoCompleted(this, new GetClientInfoByAccNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveDealerEmailByDelaerCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveDealerEmailByDelaerCode(string dealerCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveDealerEmailByDelaerCode", new object[] {
                        dealerCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveDealerEmailByDelaerCodeAsync(string dealerCode, string dbConnectionStr) {
            this.RetrieveDealerEmailByDelaerCodeAsync(dealerCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveDealerEmailByDelaerCodeAsync(string dealerCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveDealerEmailByDelaerCodeOperationCompleted == null)) {
                this.RetrieveDealerEmailByDelaerCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveDealerEmailByDelaerCodeOperationCompleted);
            }
            this.InvokeAsync("RetrieveDealerEmailByDelaerCode", new object[] {
                        dealerCode,
                        dbConnectionStr}, this.RetrieveDealerEmailByDelaerCodeOperationCompleted, userState);
        }
        
        private void OnRetrieveDealerEmailByDelaerCodeOperationCompleted(object arg) {
            if ((this.RetrieveDealerEmailByDelaerCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveDealerEmailByDelaerCodeCompleted(this, new RetrieveDealerEmailByDelaerCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveTeamEmailByTeamCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveTeamEmailByTeamCode(string teamCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveTeamEmailByTeamCode", new object[] {
                        teamCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveTeamEmailByTeamCodeAsync(string teamCode, string dbConnectionStr) {
            this.RetrieveTeamEmailByTeamCodeAsync(teamCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveTeamEmailByTeamCodeAsync(string teamCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveTeamEmailByTeamCodeOperationCompleted == null)) {
                this.RetrieveTeamEmailByTeamCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveTeamEmailByTeamCodeOperationCompleted);
            }
            this.InvokeAsync("RetrieveTeamEmailByTeamCode", new object[] {
                        teamCode,
                        dbConnectionStr}, this.RetrieveTeamEmailByTeamCodeOperationCompleted, userState);
        }
        
        private void OnRetrieveTeamEmailByTeamCodeOperationCompleted(object arg) {
            if ((this.RetrieveTeamEmailByTeamCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveTeamEmailByTeamCodeCompleted(this, new RetrieveTeamEmailByTeamCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertEmailLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] InsertEmailLog(string FromEmail, string ToEmail, string Subject, string EmailContent, string dbConnectionStr) {
            object[] results = this.Invoke("InsertEmailLog", new object[] {
                        FromEmail,
                        ToEmail,
                        Subject,
                        EmailContent,
                        dbConnectionStr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertEmailLogAsync(string FromEmail, string ToEmail, string Subject, string EmailContent, string dbConnectionStr) {
            this.InsertEmailLogAsync(FromEmail, ToEmail, Subject, EmailContent, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void InsertEmailLogAsync(string FromEmail, string ToEmail, string Subject, string EmailContent, string dbConnectionStr, object userState) {
            if ((this.InsertEmailLogOperationCompleted == null)) {
                this.InsertEmailLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmailLogOperationCompleted);
            }
            this.InvokeAsync("InsertEmailLog", new object[] {
                        FromEmail,
                        ToEmail,
                        Subject,
                        EmailContent,
                        dbConnectionStr}, this.InsertEmailLogOperationCompleted, userState);
        }
        
        private void OnInsertEmailLogOperationCompleted(object arg) {
            if ((this.InsertEmailLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEmailLogCompleted(this, new InsertEmailLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveProjectByProjectName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveProjectByProjectName(string projName, string UserID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveProjectByProjectName", new object[] {
                        projName,
                        UserID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveProjectByProjectNameAsync(string projName, string UserID, string dbConnectionStr) {
            this.RetrieveProjectByProjectNameAsync(projName, UserID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveProjectByProjectNameAsync(string projName, string UserID, string dbConnectionStr, object userState) {
            if ((this.RetrieveProjectByProjectNameOperationCompleted == null)) {
                this.RetrieveProjectByProjectNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveProjectByProjectNameOperationCompleted);
            }
            this.InvokeAsync("RetrieveProjectByProjectName", new object[] {
                        projName,
                        UserID,
                        dbConnectionStr}, this.RetrieveProjectByProjectNameOperationCompleted, userState);
        }
        
        private void OnRetrieveProjectByProjectNameOperationCompleted(object arg) {
            if ((this.RetrieveProjectByProjectNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveProjectByProjectNameCompleted(this, new RetrieveProjectByProjectNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveProjectByProjectNameByUserOrSupervisor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveProjectByProjectNameByUserOrSupervisor(string Param, string UserID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveProjectByProjectNameByUserOrSupervisor", new object[] {
                        Param,
                        UserID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveProjectByProjectNameByUserOrSupervisorAsync(string Param, string UserID, string dbConnectionStr) {
            this.RetrieveProjectByProjectNameByUserOrSupervisorAsync(Param, UserID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveProjectByProjectNameByUserOrSupervisorAsync(string Param, string UserID, string dbConnectionStr, object userState) {
            if ((this.RetrieveProjectByProjectNameByUserOrSupervisorOperationCompleted == null)) {
                this.RetrieveProjectByProjectNameByUserOrSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveProjectByProjectNameByUserOrSupervisorOperationCompleted);
            }
            this.InvokeAsync("RetrieveProjectByProjectNameByUserOrSupervisor", new object[] {
                        Param,
                        UserID,
                        dbConnectionStr}, this.RetrieveProjectByProjectNameByUserOrSupervisorOperationCompleted, userState);
        }
        
        private void OnRetrieveProjectByProjectNameByUserOrSupervisorOperationCompleted(object arg) {
            if ((this.RetrieveProjectByProjectNameByUserOrSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveProjectByProjectNameByUserOrSupervisorCompleted(this, new RetrieveProjectByProjectNameByUserOrSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveClientCallsByProjectId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveClientCallsByProjectId(string dbConnectionStr, string userId, string projectId) {
            object[] results = this.Invoke("RetrieveClientCallsByProjectId", new object[] {
                        dbConnectionStr,
                        userId,
                        projectId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveClientCallsByProjectIdAsync(string dbConnectionStr, string userId, string projectId) {
            this.RetrieveClientCallsByProjectIdAsync(dbConnectionStr, userId, projectId, null);
        }
        
        /// <remarks/>
        public void RetrieveClientCallsByProjectIdAsync(string dbConnectionStr, string userId, string projectId, object userState) {
            if ((this.RetrieveClientCallsByProjectIdOperationCompleted == null)) {
                this.RetrieveClientCallsByProjectIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveClientCallsByProjectIdOperationCompleted);
            }
            this.InvokeAsync("RetrieveClientCallsByProjectId", new object[] {
                        dbConnectionStr,
                        userId,
                        projectId}, this.RetrieveClientCallsByProjectIdOperationCompleted, userState);
        }
        
        private void OnRetrieveClientCallsByProjectIdOperationCompleted(object arg) {
            if ((this.RetrieveClientCallsByProjectIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveClientCallsByProjectIdCompleted(this, new RetrieveClientCallsByProjectIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignedProjectByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignedProjectByUserId(string dbConnectionStr, string userId) {
            object[] results = this.Invoke("RetrieveAssignedProjectByUserId", new object[] {
                        dbConnectionStr,
                        userId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignedProjectByUserIdAsync(string dbConnectionStr, string userId) {
            this.RetrieveAssignedProjectByUserIdAsync(dbConnectionStr, userId, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignedProjectByUserIdAsync(string dbConnectionStr, string userId, object userState) {
            if ((this.RetrieveAssignedProjectByUserIdOperationCompleted == null)) {
                this.RetrieveAssignedProjectByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignedProjectByUserIdOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignedProjectByUserId", new object[] {
                        dbConnectionStr,
                        userId}, this.RetrieveAssignedProjectByUserIdOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignedProjectByUserIdOperationCompleted(object arg) {
            if ((this.RetrieveAssignedProjectByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignedProjectByUserIdCompleted(this, new RetrieveAssignedProjectByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCommissionEarnedByProjectId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCommissionEarnedByProjectId(string dbConnectionStr, string projectId) {
            object[] results = this.Invoke("RetrieveCommissionEarnedByProjectId", new object[] {
                        dbConnectionStr,
                        projectId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCommissionEarnedByProjectIdAsync(string dbConnectionStr, string projectId) {
            this.RetrieveCommissionEarnedByProjectIdAsync(dbConnectionStr, projectId, null);
        }
        
        /// <remarks/>
        public void RetrieveCommissionEarnedByProjectIdAsync(string dbConnectionStr, string projectId, object userState) {
            if ((this.RetrieveCommissionEarnedByProjectIdOperationCompleted == null)) {
                this.RetrieveCommissionEarnedByProjectIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCommissionEarnedByProjectIdOperationCompleted);
            }
            this.InvokeAsync("RetrieveCommissionEarnedByProjectId", new object[] {
                        dbConnectionStr,
                        projectId}, this.RetrieveCommissionEarnedByProjectIdOperationCompleted, userState);
        }
        
        private void OnRetrieveCommissionEarnedByProjectIdOperationCompleted(object arg) {
            if ((this.RetrieveCommissionEarnedByProjectIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCommissionEarnedByProjectIdCompleted(this, new RetrieveCommissionEarnedByProjectIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignedClientInfoByProj", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignedClientInfoByProj(string ProjID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAssignedClientInfoByProj", new object[] {
                        ProjID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignedClientInfoByProjAsync(string ProjID, string dbConnectionStr) {
            this.RetrieveAssignedClientInfoByProjAsync(ProjID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignedClientInfoByProjAsync(string ProjID, string dbConnectionStr, object userState) {
            if ((this.RetrieveAssignedClientInfoByProjOperationCompleted == null)) {
                this.RetrieveAssignedClientInfoByProjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignedClientInfoByProjOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignedClientInfoByProj", new object[] {
                        ProjID,
                        dbConnectionStr}, this.RetrieveAssignedClientInfoByProjOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignedClientInfoByProjOperationCompleted(object arg) {
            if ((this.RetrieveAssignedClientInfoByProjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignedClientInfoByProjCompleted(this, new RetrieveAssignedClientInfoByProjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignedClientInfoByProjByUserOrSupervisor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignedClientInfoByProjByUserOrSupervisor(string ProjID, string Param, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAssignedClientInfoByProjByUserOrSupervisor", new object[] {
                        ProjID,
                        Param,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignedClientInfoByProjByUserOrSupervisorAsync(string ProjID, string Param, string dbConnectionStr) {
            this.RetrieveAssignedClientInfoByProjByUserOrSupervisorAsync(ProjID, Param, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignedClientInfoByProjByUserOrSupervisorAsync(string ProjID, string Param, string dbConnectionStr, object userState) {
            if ((this.RetrieveAssignedClientInfoByProjByUserOrSupervisorOperationCompleted == null)) {
                this.RetrieveAssignedClientInfoByProjByUserOrSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignedClientInfoByProjByUserOrSupervisorOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignedClientInfoByProjByUserOrSupervisor", new object[] {
                        ProjID,
                        Param,
                        dbConnectionStr}, this.RetrieveAssignedClientInfoByProjByUserOrSupervisorOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignedClientInfoByProjByUserOrSupervisorOperationCompleted(object arg) {
            if ((this.RetrieveAssignedClientInfoByProjByUserOrSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignedClientInfoByProjByUserOrSupervisorCompleted(this, new RetrieveAssignedClientInfoByProjByUserOrSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignmentHistoryByProjName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignmentHistoryByProjName(string dealerCode, string accountNo, string nric, string ProjName, bool retradeFlag, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAssignmentHistoryByProjName", new object[] {
                        dealerCode,
                        accountNo,
                        nric,
                        ProjName,
                        retradeFlag,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignmentHistoryByProjNameAsync(string dealerCode, string accountNo, string nric, string ProjName, bool retradeFlag, string dbConnectionStr) {
            this.RetrieveAssignmentHistoryByProjNameAsync(dealerCode, accountNo, nric, ProjName, retradeFlag, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignmentHistoryByProjNameAsync(string dealerCode, string accountNo, string nric, string ProjName, bool retradeFlag, string dbConnectionStr, object userState) {
            if ((this.RetrieveAssignmentHistoryByProjNameOperationCompleted == null)) {
                this.RetrieveAssignmentHistoryByProjNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignmentHistoryByProjNameOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignmentHistoryByProjName", new object[] {
                        dealerCode,
                        accountNo,
                        nric,
                        ProjName,
                        retradeFlag,
                        dbConnectionStr}, this.RetrieveAssignmentHistoryByProjNameOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignmentHistoryByProjNameOperationCompleted(object arg) {
            if ((this.RetrieveAssignmentHistoryByProjNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignmentHistoryByProjNameCompleted(this, new RetrieveAssignmentHistoryByProjNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCommissionEarnedHistoryByCriteria", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCommissionEarnedHistoryByCriteria(string dealerCode, string accountNo, string nric, string fromDate, string toDate, bool retradeFlag, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveCommissionEarnedHistoryByCriteria", new object[] {
                        dealerCode,
                        accountNo,
                        nric,
                        fromDate,
                        toDate,
                        retradeFlag,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCommissionEarnedHistoryByCriteriaAsync(string dealerCode, string accountNo, string nric, string fromDate, string toDate, bool retradeFlag, string dbConnectionStr) {
            this.RetrieveCommissionEarnedHistoryByCriteriaAsync(dealerCode, accountNo, nric, fromDate, toDate, retradeFlag, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveCommissionEarnedHistoryByCriteriaAsync(string dealerCode, string accountNo, string nric, string fromDate, string toDate, bool retradeFlag, string dbConnectionStr, object userState) {
            if ((this.RetrieveCommissionEarnedHistoryByCriteriaOperationCompleted == null)) {
                this.RetrieveCommissionEarnedHistoryByCriteriaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCommissionEarnedHistoryByCriteriaOperationCompleted);
            }
            this.InvokeAsync("RetrieveCommissionEarnedHistoryByCriteria", new object[] {
                        dealerCode,
                        accountNo,
                        nric,
                        fromDate,
                        toDate,
                        retradeFlag,
                        dbConnectionStr}, this.RetrieveCommissionEarnedHistoryByCriteriaOperationCompleted, userState);
        }
        
        private void OnRetrieveCommissionEarnedHistoryByCriteriaOperationCompleted(object arg) {
            if ((this.RetrieveCommissionEarnedHistoryByCriteriaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCommissionEarnedHistoryByCriteriaCompleted(this, new RetrieveCommissionEarnedHistoryByCriteriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCommissionEarnedHistoryByProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCommissionEarnedHistoryByProject(string dealerCode, string accountNo, string nric, string ProjName, bool retradeFlag, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveCommissionEarnedHistoryByProject", new object[] {
                        dealerCode,
                        accountNo,
                        nric,
                        ProjName,
                        retradeFlag,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCommissionEarnedHistoryByProjectAsync(string dealerCode, string accountNo, string nric, string ProjName, bool retradeFlag, string dbConnectionStr) {
            this.RetrieveCommissionEarnedHistoryByProjectAsync(dealerCode, accountNo, nric, ProjName, retradeFlag, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveCommissionEarnedHistoryByProjectAsync(string dealerCode, string accountNo, string nric, string ProjName, bool retradeFlag, string dbConnectionStr, object userState) {
            if ((this.RetrieveCommissionEarnedHistoryByProjectOperationCompleted == null)) {
                this.RetrieveCommissionEarnedHistoryByProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCommissionEarnedHistoryByProjectOperationCompleted);
            }
            this.InvokeAsync("RetrieveCommissionEarnedHistoryByProject", new object[] {
                        dealerCode,
                        accountNo,
                        nric,
                        ProjName,
                        retradeFlag,
                        dbConnectionStr}, this.RetrieveCommissionEarnedHistoryByProjectOperationCompleted, userState);
        }
        
        private void OnRetrieveCommissionEarnedHistoryByProjectOperationCompleted(object arg) {
            if ((this.RetrieveCommissionEarnedHistoryByProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCommissionEarnedHistoryByProjectCompleted(this, new RetrieveCommissionEarnedHistoryByProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveClientsForAssignmentCompletedEventHandler(object sender, RetrieveClientsForAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveClientsForAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveClientsForAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveTeamsForAssignmentCompletedEventHandler(object sender, RetrieveTeamsForAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveTeamsForAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveTeamsForAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveDealerAndTeamForAssignmentCompletedEventHandler(object sender, RetrieveDealerAndTeamForAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveDealerAndTeamForAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveDealerAndTeamForAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveDealerByTeamCodeForAssignmentCompletedEventHandler(object sender, RetrieveDealerByTeamCodeForAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveDealerByTeamCodeForAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveDealerByTeamCodeForAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void InsertAssignmentCompletedEventHandler(object sender, InsertAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void DeleteClientAssignmentCompletedEventHandler(object sender, DeleteClientAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteClientAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteClientAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void BatchDeleteClientAssignmentCompletedEventHandler(object sender, BatchDeleteClientAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchDeleteClientAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchDeleteClientAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAssignmentHistoryByCriteriaCompletedEventHandler(object sender, RetrieveAssignmentHistoryByCriteriaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignmentHistoryByCriteriaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignmentHistoryByCriteriaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAssignedClientInfoCompletedEventHandler(object sender, RetrieveAssignedClientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignedClientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignedClientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAssignedClientInfoByUserOrSupervisorCompletedEventHandler(object sender, RetrieveAssignedClientInfoByUserOrSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignedClientInfoByUserOrSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignedClientInfoByUserOrSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void PrepareForAssignedClientInfoCompletedEventHandler(object sender, PrepareForAssignedClientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareForAssignedClientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareForAssignedClientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAllDealerCompletedEventHandler(object sender, RetrieveAllDealerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllDealerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAllDealerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAllDealerByUserOrSupervisorCompletedEventHandler(object sender, RetrieveAllDealerByUserOrSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllDealerByUserOrSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAllDealerByUserOrSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAssignReportByDealerCompletedEventHandler(object sender, RetrieveAssignReportByDealerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignReportByDealerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignReportByDealerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAssignReportByFollowUpDateCompletedEventHandler(object sender, RetrieveAssignReportByFollowUpDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignReportByFollowUpDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignReportByFollowUpDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveFollowUpDateByProjectIDCompletedEventHandler(object sender, RetrieveFollowUpDateByProjectIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveFollowUpDateByProjectIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveFollowUpDateByProjectIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveCrossEnabledTeamCompletedEventHandler(object sender, RetrieveCrossEnabledTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCrossEnabledTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCrossEnabledTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveCrossEnabledDealerCompletedEventHandler(object sender, RetrieveCrossEnabledDealerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCrossEnabledDealerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCrossEnabledDealerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAssignmentDateByDateRangeCompletedEventHandler(object sender, RetrieveAssignmentDateByDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignmentDateByDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignmentDateByDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAssignmentDateByDateRangeByUserOrSupervisorCompletedEventHandler(object sender, RetrieveAssignmentDateByDateRangeByUserOrSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignmentDateByDateRangeByUserOrSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignmentDateByDateRangeByUserOrSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveProjectAttachmentCompletedEventHandler(object sender, RetrieveProjectAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveProjectAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveProjectAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAccountTypeValuesCompletedEventHandler(object sender, RetrieveAccountTypeValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAccountTypeValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAccountTypeValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void InsertProjectInfoCompletedEventHandler(object sender, InsertProjectInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertProjectInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertProjectInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void InsertProjectAttachmentCompletedEventHandler(object sender, InsertProjectAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertProjectAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertProjectAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAllProjectInformationCompletedEventHandler(object sender, RetrieveAllProjectInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllProjectInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAllProjectInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetClientInfoByAccNoCompletedEventHandler(object sender, GetClientInfoByAccNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientInfoByAccNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientInfoByAccNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveDealerEmailByDelaerCodeCompletedEventHandler(object sender, RetrieveDealerEmailByDelaerCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveDealerEmailByDelaerCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveDealerEmailByDelaerCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveTeamEmailByTeamCodeCompletedEventHandler(object sender, RetrieveTeamEmailByTeamCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveTeamEmailByTeamCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveTeamEmailByTeamCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void InsertEmailLogCompletedEventHandler(object sender, InsertEmailLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEmailLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEmailLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveProjectByProjectNameCompletedEventHandler(object sender, RetrieveProjectByProjectNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveProjectByProjectNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveProjectByProjectNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveProjectByProjectNameByUserOrSupervisorCompletedEventHandler(object sender, RetrieveProjectByProjectNameByUserOrSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveProjectByProjectNameByUserOrSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveProjectByProjectNameByUserOrSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveClientCallsByProjectIdCompletedEventHandler(object sender, RetrieveClientCallsByProjectIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveClientCallsByProjectIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveClientCallsByProjectIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAssignedProjectByUserIdCompletedEventHandler(object sender, RetrieveAssignedProjectByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignedProjectByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignedProjectByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveCommissionEarnedByProjectIdCompletedEventHandler(object sender, RetrieveCommissionEarnedByProjectIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCommissionEarnedByProjectIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCommissionEarnedByProjectIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAssignedClientInfoByProjCompletedEventHandler(object sender, RetrieveAssignedClientInfoByProjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignedClientInfoByProjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignedClientInfoByProjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAssignedClientInfoByProjByUserOrSupervisorCompletedEventHandler(object sender, RetrieveAssignedClientInfoByProjByUserOrSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignedClientInfoByProjByUserOrSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignedClientInfoByProjByUserOrSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveAssignmentHistoryByProjNameCompletedEventHandler(object sender, RetrieveAssignmentHistoryByProjNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignmentHistoryByProjNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignmentHistoryByProjNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveCommissionEarnedHistoryByCriteriaCompletedEventHandler(object sender, RetrieveCommissionEarnedHistoryByCriteriaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCommissionEarnedHistoryByCriteriaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCommissionEarnedHistoryByCriteriaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RetrieveCommissionEarnedHistoryByProjectCompletedEventHandler(object sender, RetrieveCommissionEarnedHistoryByProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCommissionEarnedHistoryByProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCommissionEarnedHistoryByProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591