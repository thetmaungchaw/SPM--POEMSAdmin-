//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3620
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3620.
// 
#pragma warning disable 1591

namespace SPMWebApp.LeadsAssignmentManagementService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LeadsAssignmentManagementSoap", Namespace="http://tempuri.org/")]
    public partial class LeadsAssignmentManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RetrieveLeadsForAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveTeamsForLeadsAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveDealerAndTeamForLeadsAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveDealerByTeamCodeForLeadsAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLeadsAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLeadsAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchDeleteLeadsAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveLeadsAssignmentHistoryByCriteriaOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignedLeadsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareForAssignedLeadsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareForLeadsAssignmentHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCrossEnabledTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCrossEnabledDealerOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveLeadsAssignmentDateByDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProjectInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAllProjectInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAssignedLeadsProjectByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveDealerEmailByDelaerCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEmailLogOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LeadsAssignmentManagement() {
            this.Url = global::SPMWebApp.Properties.Settings.Default.SPMWebApp_LeadsAssignmentManagementService_LeadsAssignmentManagement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RetrieveLeadsForAssignmentCompletedEventHandler RetrieveLeadsForAssignmentCompleted;
        
        /// <remarks/>
        public event RetrieveTeamsForLeadsAssignmentCompletedEventHandler RetrieveTeamsForLeadsAssignmentCompleted;
        
        /// <remarks/>
        public event RetrieveDealerAndTeamForLeadsAssignmentCompletedEventHandler RetrieveDealerAndTeamForLeadsAssignmentCompleted;
        
        /// <remarks/>
        public event RetrieveDealerByTeamCodeForLeadsAssignmentCompletedEventHandler RetrieveDealerByTeamCodeForLeadsAssignmentCompleted;
        
        /// <remarks/>
        public event InsertLeadsAssignmentCompletedEventHandler InsertLeadsAssignmentCompleted;
        
        /// <remarks/>
        public event DeleteLeadsAssignmentCompletedEventHandler DeleteLeadsAssignmentCompleted;
        
        /// <remarks/>
        public event BatchDeleteLeadsAssignmentCompletedEventHandler BatchDeleteLeadsAssignmentCompleted;
        
        /// <remarks/>
        public event RetrieveLeadsAssignmentHistoryByCriteriaCompletedEventHandler RetrieveLeadsAssignmentHistoryByCriteriaCompleted;
        
        /// <remarks/>
        public event RetrieveAssignedLeadsInfoCompletedEventHandler RetrieveAssignedLeadsInfoCompleted;
        
        /// <remarks/>
        public event PrepareForAssignedLeadsInfoCompletedEventHandler PrepareForAssignedLeadsInfoCompleted;
        
        /// <remarks/>
        public event PrepareForLeadsAssignmentHistoryCompletedEventHandler PrepareForLeadsAssignmentHistoryCompleted;
        
        /// <remarks/>
        public event RetrieveCrossEnabledTeamCompletedEventHandler RetrieveCrossEnabledTeamCompleted;
        
        /// <remarks/>
        public event RetrieveCrossEnabledDealerCompletedEventHandler RetrieveCrossEnabledDealerCompleted;
        
        /// <remarks/>
        public event RetrieveLeadsAssignmentDateByDateRangeCompletedEventHandler RetrieveLeadsAssignmentDateByDateRangeCompleted;
        
        /// <remarks/>
        public event SaveProjectInformationCompletedEventHandler SaveProjectInformationCompleted;
        
        /// <remarks/>
        public event RetrieveAllProjectInformationCompletedEventHandler RetrieveAllProjectInformationCompleted;
        
        /// <remarks/>
        public event RetrieveAssignedLeadsProjectByUserIdCompletedEventHandler RetrieveAssignedLeadsProjectByUserIdCompleted;
        
        /// <remarks/>
        public event RetrieveDealerEmailByDelaerCodeCompletedEventHandler RetrieveDealerEmailByDelaerCodeCompleted;
        
        /// <remarks/>
        public event InsertEmailLogCompletedEventHandler InsertEmailLogCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveLeadsForAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveLeadsForAssignment(string teamCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveLeadsForAssignment", new object[] {
                        teamCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveLeadsForAssignmentAsync(string teamCode, string dbConnectionStr) {
            this.RetrieveLeadsForAssignmentAsync(teamCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveLeadsForAssignmentAsync(string teamCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveLeadsForAssignmentOperationCompleted == null)) {
                this.RetrieveLeadsForAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveLeadsForAssignmentOperationCompleted);
            }
            this.InvokeAsync("RetrieveLeadsForAssignment", new object[] {
                        teamCode,
                        dbConnectionStr}, this.RetrieveLeadsForAssignmentOperationCompleted, userState);
        }
        
        private void OnRetrieveLeadsForAssignmentOperationCompleted(object arg) {
            if ((this.RetrieveLeadsForAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveLeadsForAssignmentCompleted(this, new RetrieveLeadsForAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveTeamsForLeadsAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveTeamsForLeadsAssignment(string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveTeamsForLeadsAssignment", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveTeamsForLeadsAssignmentAsync(string dbConnectionStr) {
            this.RetrieveTeamsForLeadsAssignmentAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveTeamsForLeadsAssignmentAsync(string dbConnectionStr, object userState) {
            if ((this.RetrieveTeamsForLeadsAssignmentOperationCompleted == null)) {
                this.RetrieveTeamsForLeadsAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveTeamsForLeadsAssignmentOperationCompleted);
            }
            this.InvokeAsync("RetrieveTeamsForLeadsAssignment", new object[] {
                        dbConnectionStr}, this.RetrieveTeamsForLeadsAssignmentOperationCompleted, userState);
        }
        
        private void OnRetrieveTeamsForLeadsAssignmentOperationCompleted(object arg) {
            if ((this.RetrieveTeamsForLeadsAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveTeamsForLeadsAssignmentCompleted(this, new RetrieveTeamsForLeadsAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveDealerAndTeamForLeadsAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveDealerAndTeamForLeadsAssignment(string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveDealerAndTeamForLeadsAssignment", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveDealerAndTeamForLeadsAssignmentAsync(string dbConnectionStr) {
            this.RetrieveDealerAndTeamForLeadsAssignmentAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveDealerAndTeamForLeadsAssignmentAsync(string dbConnectionStr, object userState) {
            if ((this.RetrieveDealerAndTeamForLeadsAssignmentOperationCompleted == null)) {
                this.RetrieveDealerAndTeamForLeadsAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveDealerAndTeamForLeadsAssignmentOperationCompleted);
            }
            this.InvokeAsync("RetrieveDealerAndTeamForLeadsAssignment", new object[] {
                        dbConnectionStr}, this.RetrieveDealerAndTeamForLeadsAssignmentOperationCompleted, userState);
        }
        
        private void OnRetrieveDealerAndTeamForLeadsAssignmentOperationCompleted(object arg) {
            if ((this.RetrieveDealerAndTeamForLeadsAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveDealerAndTeamForLeadsAssignmentCompleted(this, new RetrieveDealerAndTeamForLeadsAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveDealerByTeamCodeForLeadsAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveDealerByTeamCodeForLeadsAssignment(string teamCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveDealerByTeamCodeForLeadsAssignment", new object[] {
                        teamCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveDealerByTeamCodeForLeadsAssignmentAsync(string teamCode, string dbConnectionStr) {
            this.RetrieveDealerByTeamCodeForLeadsAssignmentAsync(teamCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveDealerByTeamCodeForLeadsAssignmentAsync(string teamCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveDealerByTeamCodeForLeadsAssignmentOperationCompleted == null)) {
                this.RetrieveDealerByTeamCodeForLeadsAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveDealerByTeamCodeForLeadsAssignmentOperationCompleted);
            }
            this.InvokeAsync("RetrieveDealerByTeamCodeForLeadsAssignment", new object[] {
                        teamCode,
                        dbConnectionStr}, this.RetrieveDealerByTeamCodeForLeadsAssignmentOperationCompleted, userState);
        }
        
        private void OnRetrieveDealerByTeamCodeForLeadsAssignmentOperationCompleted(object arg) {
            if ((this.RetrieveDealerByTeamCodeForLeadsAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveDealerByTeamCodeForLeadsAssignmentCompleted(this, new RetrieveDealerByTeamCodeForLeadsAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLeadsAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] InsertLeadsAssignment(System.Data.DataSet ds, string ProjectID, string dbConnectionStr) {
            object[] results = this.Invoke("InsertLeadsAssignment", new object[] {
                        ds,
                        ProjectID,
                        dbConnectionStr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertLeadsAssignmentAsync(System.Data.DataSet ds, string ProjectID, string dbConnectionStr) {
            this.InsertLeadsAssignmentAsync(ds, ProjectID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void InsertLeadsAssignmentAsync(System.Data.DataSet ds, string ProjectID, string dbConnectionStr, object userState) {
            if ((this.InsertLeadsAssignmentOperationCompleted == null)) {
                this.InsertLeadsAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLeadsAssignmentOperationCompleted);
            }
            this.InvokeAsync("InsertLeadsAssignment", new object[] {
                        ds,
                        ProjectID,
                        dbConnectionStr}, this.InsertLeadsAssignmentOperationCompleted, userState);
        }
        
        private void OnInsertLeadsAssignmentOperationCompleted(object arg) {
            if ((this.InsertLeadsAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLeadsAssignmentCompleted(this, new InsertLeadsAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteLeadsAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] DeleteLeadsAssignment(string dealerCode, string accountNumber, string assignDate, string cutOffDate, string modifiedUser, string modifiedDate, string newModifiedUser, string dbConnectionStr) {
            object[] results = this.Invoke("DeleteLeadsAssignment", new object[] {
                        dealerCode,
                        accountNumber,
                        assignDate,
                        cutOffDate,
                        modifiedUser,
                        modifiedDate,
                        newModifiedUser,
                        dbConnectionStr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLeadsAssignmentAsync(string dealerCode, string accountNumber, string assignDate, string cutOffDate, string modifiedUser, string modifiedDate, string newModifiedUser, string dbConnectionStr) {
            this.DeleteLeadsAssignmentAsync(dealerCode, accountNumber, assignDate, cutOffDate, modifiedUser, modifiedDate, newModifiedUser, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void DeleteLeadsAssignmentAsync(string dealerCode, string accountNumber, string assignDate, string cutOffDate, string modifiedUser, string modifiedDate, string newModifiedUser, string dbConnectionStr, object userState) {
            if ((this.DeleteLeadsAssignmentOperationCompleted == null)) {
                this.DeleteLeadsAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLeadsAssignmentOperationCompleted);
            }
            this.InvokeAsync("DeleteLeadsAssignment", new object[] {
                        dealerCode,
                        accountNumber,
                        assignDate,
                        cutOffDate,
                        modifiedUser,
                        modifiedDate,
                        newModifiedUser,
                        dbConnectionStr}, this.DeleteLeadsAssignmentOperationCompleted, userState);
        }
        
        private void OnDeleteLeadsAssignmentOperationCompleted(object arg) {
            if ((this.DeleteLeadsAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLeadsAssignmentCompleted(this, new DeleteLeadsAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchDeleteLeadsAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BatchDeleteLeadsAssignment(System.Data.DataSet dsAssignDelete, string dbConnectionStr) {
            object[] results = this.Invoke("BatchDeleteLeadsAssignment", new object[] {
                        dsAssignDelete,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BatchDeleteLeadsAssignmentAsync(System.Data.DataSet dsAssignDelete, string dbConnectionStr) {
            this.BatchDeleteLeadsAssignmentAsync(dsAssignDelete, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void BatchDeleteLeadsAssignmentAsync(System.Data.DataSet dsAssignDelete, string dbConnectionStr, object userState) {
            if ((this.BatchDeleteLeadsAssignmentOperationCompleted == null)) {
                this.BatchDeleteLeadsAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchDeleteLeadsAssignmentOperationCompleted);
            }
            this.InvokeAsync("BatchDeleteLeadsAssignment", new object[] {
                        dsAssignDelete,
                        dbConnectionStr}, this.BatchDeleteLeadsAssignmentOperationCompleted, userState);
        }
        
        private void OnBatchDeleteLeadsAssignmentOperationCompleted(object arg) {
            if ((this.BatchDeleteLeadsAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchDeleteLeadsAssignmentCompleted(this, new BatchDeleteLeadsAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveLeadsAssignmentHistoryByCriteria", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveLeadsAssignmentHistoryByCriteria(string dealerCode, string accountNo, string nric, string fromDate, string toDate, bool retradeFlag, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveLeadsAssignmentHistoryByCriteria", new object[] {
                        dealerCode,
                        accountNo,
                        nric,
                        fromDate,
                        toDate,
                        retradeFlag,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveLeadsAssignmentHistoryByCriteriaAsync(string dealerCode, string accountNo, string nric, string fromDate, string toDate, bool retradeFlag, string dbConnectionStr) {
            this.RetrieveLeadsAssignmentHistoryByCriteriaAsync(dealerCode, accountNo, nric, fromDate, toDate, retradeFlag, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveLeadsAssignmentHistoryByCriteriaAsync(string dealerCode, string accountNo, string nric, string fromDate, string toDate, bool retradeFlag, string dbConnectionStr, object userState) {
            if ((this.RetrieveLeadsAssignmentHistoryByCriteriaOperationCompleted == null)) {
                this.RetrieveLeadsAssignmentHistoryByCriteriaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveLeadsAssignmentHistoryByCriteriaOperationCompleted);
            }
            this.InvokeAsync("RetrieveLeadsAssignmentHistoryByCriteria", new object[] {
                        dealerCode,
                        accountNo,
                        nric,
                        fromDate,
                        toDate,
                        retradeFlag,
                        dbConnectionStr}, this.RetrieveLeadsAssignmentHistoryByCriteriaOperationCompleted, userState);
        }
        
        private void OnRetrieveLeadsAssignmentHistoryByCriteriaOperationCompleted(object arg) {
            if ((this.RetrieveLeadsAssignmentHistoryByCriteriaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveLeadsAssignmentHistoryByCriteriaCompleted(this, new RetrieveLeadsAssignmentHistoryByCriteriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignedLeadsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignedLeadsInfo(string teamCode, string dealerCode, string accountNo, string assignDate, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAssignedLeadsInfo", new object[] {
                        teamCode,
                        dealerCode,
                        accountNo,
                        assignDate,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignedLeadsInfoAsync(string teamCode, string dealerCode, string accountNo, string assignDate, string dbConnectionStr) {
            this.RetrieveAssignedLeadsInfoAsync(teamCode, dealerCode, accountNo, assignDate, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignedLeadsInfoAsync(string teamCode, string dealerCode, string accountNo, string assignDate, string dbConnectionStr, object userState) {
            if ((this.RetrieveAssignedLeadsInfoOperationCompleted == null)) {
                this.RetrieveAssignedLeadsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignedLeadsInfoOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignedLeadsInfo", new object[] {
                        teamCode,
                        dealerCode,
                        accountNo,
                        assignDate,
                        dbConnectionStr}, this.RetrieveAssignedLeadsInfoOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignedLeadsInfoOperationCompleted(object arg) {
            if ((this.RetrieveAssignedLeadsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignedLeadsInfoCompleted(this, new RetrieveAssignedLeadsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrepareForAssignedLeadsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrepareForAssignedLeadsInfo(string dbConnectionStr) {
            object[] results = this.Invoke("PrepareForAssignedLeadsInfo", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareForAssignedLeadsInfoAsync(string dbConnectionStr) {
            this.PrepareForAssignedLeadsInfoAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void PrepareForAssignedLeadsInfoAsync(string dbConnectionStr, object userState) {
            if ((this.PrepareForAssignedLeadsInfoOperationCompleted == null)) {
                this.PrepareForAssignedLeadsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareForAssignedLeadsInfoOperationCompleted);
            }
            this.InvokeAsync("PrepareForAssignedLeadsInfo", new object[] {
                        dbConnectionStr}, this.PrepareForAssignedLeadsInfoOperationCompleted, userState);
        }
        
        private void OnPrepareForAssignedLeadsInfoOperationCompleted(object arg) {
            if ((this.PrepareForAssignedLeadsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareForAssignedLeadsInfoCompleted(this, new PrepareForAssignedLeadsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrepareForLeadsAssignmentHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrepareForLeadsAssignmentHistory(string dbConnectionStr) {
            object[] results = this.Invoke("PrepareForLeadsAssignmentHistory", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareForLeadsAssignmentHistoryAsync(string dbConnectionStr) {
            this.PrepareForLeadsAssignmentHistoryAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void PrepareForLeadsAssignmentHistoryAsync(string dbConnectionStr, object userState) {
            if ((this.PrepareForLeadsAssignmentHistoryOperationCompleted == null)) {
                this.PrepareForLeadsAssignmentHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareForLeadsAssignmentHistoryOperationCompleted);
            }
            this.InvokeAsync("PrepareForLeadsAssignmentHistory", new object[] {
                        dbConnectionStr}, this.PrepareForLeadsAssignmentHistoryOperationCompleted, userState);
        }
        
        private void OnPrepareForLeadsAssignmentHistoryOperationCompleted(object arg) {
            if ((this.PrepareForLeadsAssignmentHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareForLeadsAssignmentHistoryCompleted(this, new PrepareForLeadsAssignmentHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCrossEnabledTeam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCrossEnabledTeam(string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveCrossEnabledTeam", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCrossEnabledTeamAsync(string dbConnectionStr) {
            this.RetrieveCrossEnabledTeamAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveCrossEnabledTeamAsync(string dbConnectionStr, object userState) {
            if ((this.RetrieveCrossEnabledTeamOperationCompleted == null)) {
                this.RetrieveCrossEnabledTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCrossEnabledTeamOperationCompleted);
            }
            this.InvokeAsync("RetrieveCrossEnabledTeam", new object[] {
                        dbConnectionStr}, this.RetrieveCrossEnabledTeamOperationCompleted, userState);
        }
        
        private void OnRetrieveCrossEnabledTeamOperationCompleted(object arg) {
            if ((this.RetrieveCrossEnabledTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCrossEnabledTeamCompleted(this, new RetrieveCrossEnabledTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCrossEnabledDealer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCrossEnabledDealer(string crossTeamCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveCrossEnabledDealer", new object[] {
                        crossTeamCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCrossEnabledDealerAsync(string crossTeamCode, string dbConnectionStr) {
            this.RetrieveCrossEnabledDealerAsync(crossTeamCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveCrossEnabledDealerAsync(string crossTeamCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveCrossEnabledDealerOperationCompleted == null)) {
                this.RetrieveCrossEnabledDealerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCrossEnabledDealerOperationCompleted);
            }
            this.InvokeAsync("RetrieveCrossEnabledDealer", new object[] {
                        crossTeamCode,
                        dbConnectionStr}, this.RetrieveCrossEnabledDealerOperationCompleted, userState);
        }
        
        private void OnRetrieveCrossEnabledDealerOperationCompleted(object arg) {
            if ((this.RetrieveCrossEnabledDealerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCrossEnabledDealerCompleted(this, new RetrieveCrossEnabledDealerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveLeadsAssignmentDateByDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveLeadsAssignmentDateByDateRange(string fromDate, string toDate, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveLeadsAssignmentDateByDateRange", new object[] {
                        fromDate,
                        toDate,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveLeadsAssignmentDateByDateRangeAsync(string fromDate, string toDate, string dbConnectionStr) {
            this.RetrieveLeadsAssignmentDateByDateRangeAsync(fromDate, toDate, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveLeadsAssignmentDateByDateRangeAsync(string fromDate, string toDate, string dbConnectionStr, object userState) {
            if ((this.RetrieveLeadsAssignmentDateByDateRangeOperationCompleted == null)) {
                this.RetrieveLeadsAssignmentDateByDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveLeadsAssignmentDateByDateRangeOperationCompleted);
            }
            this.InvokeAsync("RetrieveLeadsAssignmentDateByDateRange", new object[] {
                        fromDate,
                        toDate,
                        dbConnectionStr}, this.RetrieveLeadsAssignmentDateByDateRangeOperationCompleted, userState);
        }
        
        private void OnRetrieveLeadsAssignmentDateByDateRangeOperationCompleted(object arg) {
            if ((this.RetrieveLeadsAssignmentDateByDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveLeadsAssignmentDateByDateRangeCompleted(this, new RetrieveLeadsAssignmentDateByDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveProjectInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SaveProjectInformation(string ProjectName, System.DateTime CutOffDate, string dbConnectionStr) {
            object[] results = this.Invoke("SaveProjectInformation", new object[] {
                        ProjectName,
                        CutOffDate,
                        dbConnectionStr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SaveProjectInformationAsync(string ProjectName, System.DateTime CutOffDate, string dbConnectionStr) {
            this.SaveProjectInformationAsync(ProjectName, CutOffDate, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void SaveProjectInformationAsync(string ProjectName, System.DateTime CutOffDate, string dbConnectionStr, object userState) {
            if ((this.SaveProjectInformationOperationCompleted == null)) {
                this.SaveProjectInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProjectInformationOperationCompleted);
            }
            this.InvokeAsync("SaveProjectInformation", new object[] {
                        ProjectName,
                        CutOffDate,
                        dbConnectionStr}, this.SaveProjectInformationOperationCompleted, userState);
        }
        
        private void OnSaveProjectInformationOperationCompleted(object arg) {
            if ((this.SaveProjectInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProjectInformationCompleted(this, new SaveProjectInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAllProjectInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAllProjectInformation(string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveAllProjectInformation", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAllProjectInformationAsync(string dbConnectionStr) {
            this.RetrieveAllProjectInformationAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveAllProjectInformationAsync(string dbConnectionStr, object userState) {
            if ((this.RetrieveAllProjectInformationOperationCompleted == null)) {
                this.RetrieveAllProjectInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAllProjectInformationOperationCompleted);
            }
            this.InvokeAsync("RetrieveAllProjectInformation", new object[] {
                        dbConnectionStr}, this.RetrieveAllProjectInformationOperationCompleted, userState);
        }
        
        private void OnRetrieveAllProjectInformationOperationCompleted(object arg) {
            if ((this.RetrieveAllProjectInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAllProjectInformationCompleted(this, new RetrieveAllProjectInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAssignedLeadsProjectByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAssignedLeadsProjectByUserId(string dbConnectionStr, string userId) {
            object[] results = this.Invoke("RetrieveAssignedLeadsProjectByUserId", new object[] {
                        dbConnectionStr,
                        userId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAssignedLeadsProjectByUserIdAsync(string dbConnectionStr, string userId) {
            this.RetrieveAssignedLeadsProjectByUserIdAsync(dbConnectionStr, userId, null);
        }
        
        /// <remarks/>
        public void RetrieveAssignedLeadsProjectByUserIdAsync(string dbConnectionStr, string userId, object userState) {
            if ((this.RetrieveAssignedLeadsProjectByUserIdOperationCompleted == null)) {
                this.RetrieveAssignedLeadsProjectByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAssignedLeadsProjectByUserIdOperationCompleted);
            }
            this.InvokeAsync("RetrieveAssignedLeadsProjectByUserId", new object[] {
                        dbConnectionStr,
                        userId}, this.RetrieveAssignedLeadsProjectByUserIdOperationCompleted, userState);
        }
        
        private void OnRetrieveAssignedLeadsProjectByUserIdOperationCompleted(object arg) {
            if ((this.RetrieveAssignedLeadsProjectByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAssignedLeadsProjectByUserIdCompleted(this, new RetrieveAssignedLeadsProjectByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveDealerEmailByDelaerCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveDealerEmailByDelaerCode(string dealerCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveDealerEmailByDelaerCode", new object[] {
                        dealerCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveDealerEmailByDelaerCodeAsync(string dealerCode, string dbConnectionStr) {
            this.RetrieveDealerEmailByDelaerCodeAsync(dealerCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveDealerEmailByDelaerCodeAsync(string dealerCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveDealerEmailByDelaerCodeOperationCompleted == null)) {
                this.RetrieveDealerEmailByDelaerCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveDealerEmailByDelaerCodeOperationCompleted);
            }
            this.InvokeAsync("RetrieveDealerEmailByDelaerCode", new object[] {
                        dealerCode,
                        dbConnectionStr}, this.RetrieveDealerEmailByDelaerCodeOperationCompleted, userState);
        }
        
        private void OnRetrieveDealerEmailByDelaerCodeOperationCompleted(object arg) {
            if ((this.RetrieveDealerEmailByDelaerCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveDealerEmailByDelaerCodeCompleted(this, new RetrieveDealerEmailByDelaerCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertEmailLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] InsertEmailLog(string FromEmail, string ToEmail, string Subject, string EmailContent, string dbConnectionStr) {
            object[] results = this.Invoke("InsertEmailLog", new object[] {
                        FromEmail,
                        ToEmail,
                        Subject,
                        EmailContent,
                        dbConnectionStr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertEmailLogAsync(string FromEmail, string ToEmail, string Subject, string EmailContent, string dbConnectionStr) {
            this.InsertEmailLogAsync(FromEmail, ToEmail, Subject, EmailContent, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void InsertEmailLogAsync(string FromEmail, string ToEmail, string Subject, string EmailContent, string dbConnectionStr, object userState) {
            if ((this.InsertEmailLogOperationCompleted == null)) {
                this.InsertEmailLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmailLogOperationCompleted);
            }
            this.InvokeAsync("InsertEmailLog", new object[] {
                        FromEmail,
                        ToEmail,
                        Subject,
                        EmailContent,
                        dbConnectionStr}, this.InsertEmailLogOperationCompleted, userState);
        }
        
        private void OnInsertEmailLogOperationCompleted(object arg) {
            if ((this.InsertEmailLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEmailLogCompleted(this, new InsertEmailLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveLeadsForAssignmentCompletedEventHandler(object sender, RetrieveLeadsForAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveLeadsForAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveLeadsForAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveTeamsForLeadsAssignmentCompletedEventHandler(object sender, RetrieveTeamsForLeadsAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveTeamsForLeadsAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveTeamsForLeadsAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveDealerAndTeamForLeadsAssignmentCompletedEventHandler(object sender, RetrieveDealerAndTeamForLeadsAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveDealerAndTeamForLeadsAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveDealerAndTeamForLeadsAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveDealerByTeamCodeForLeadsAssignmentCompletedEventHandler(object sender, RetrieveDealerByTeamCodeForLeadsAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveDealerByTeamCodeForLeadsAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveDealerByTeamCodeForLeadsAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertLeadsAssignmentCompletedEventHandler(object sender, InsertLeadsAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLeadsAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLeadsAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteLeadsAssignmentCompletedEventHandler(object sender, DeleteLeadsAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLeadsAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLeadsAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void BatchDeleteLeadsAssignmentCompletedEventHandler(object sender, BatchDeleteLeadsAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchDeleteLeadsAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchDeleteLeadsAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveLeadsAssignmentHistoryByCriteriaCompletedEventHandler(object sender, RetrieveLeadsAssignmentHistoryByCriteriaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveLeadsAssignmentHistoryByCriteriaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveLeadsAssignmentHistoryByCriteriaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveAssignedLeadsInfoCompletedEventHandler(object sender, RetrieveAssignedLeadsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignedLeadsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignedLeadsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PrepareForAssignedLeadsInfoCompletedEventHandler(object sender, PrepareForAssignedLeadsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareForAssignedLeadsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareForAssignedLeadsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PrepareForLeadsAssignmentHistoryCompletedEventHandler(object sender, PrepareForLeadsAssignmentHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareForLeadsAssignmentHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareForLeadsAssignmentHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveCrossEnabledTeamCompletedEventHandler(object sender, RetrieveCrossEnabledTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCrossEnabledTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCrossEnabledTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveCrossEnabledDealerCompletedEventHandler(object sender, RetrieveCrossEnabledDealerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCrossEnabledDealerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCrossEnabledDealerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveLeadsAssignmentDateByDateRangeCompletedEventHandler(object sender, RetrieveLeadsAssignmentDateByDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveLeadsAssignmentDateByDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveLeadsAssignmentDateByDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SaveProjectInformationCompletedEventHandler(object sender, SaveProjectInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProjectInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProjectInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveAllProjectInformationCompletedEventHandler(object sender, RetrieveAllProjectInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAllProjectInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAllProjectInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveAssignedLeadsProjectByUserIdCompletedEventHandler(object sender, RetrieveAssignedLeadsProjectByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAssignedLeadsProjectByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAssignedLeadsProjectByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveDealerEmailByDelaerCodeCompletedEventHandler(object sender, RetrieveDealerEmailByDelaerCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveDealerEmailByDelaerCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveDealerEmailByDelaerCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertEmailLogCompletedEventHandler(object sender, InsertEmailLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEmailLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEmailLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591