//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
// 
#pragma warning disable 1591

namespace SPMWebApp.ContactManagementService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ContactManagementSoap", Namespace="http://tempuri.org/")]
    public partial class ContactManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PrepareForContactEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveByAccountNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveUnContactedAssignmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveUnContactedAssignmentByProjectIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveClientInfoByShortKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDetailUserInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeminorRegistrationByAccNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getContactHistoryByAccountNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveContactHistoryByCriteriaOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertClientContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClientContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClientContactFollowUpStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteClientContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareForContactHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareForContactHistoryByUserOrSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveContactAnalysisOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCallReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCallReportByUserOrSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCallReportDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCallReportProjectDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveClientAnalysisOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareForClientAnalysisOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareForClientAnalysisByUserOrSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveContactEntryForTodayOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCallReportByProjectNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCallReportByProjectNameByUserOrSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveContactHistoryByProjNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveContactAnalysisByProjectNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCommissionEarnedByClientAcctNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCashAndEquivalentByUserAcctNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveAvailableFundsByUserAcctNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveClientServiceTypeByClientAcctNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareForContactToFollowUpOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ContactManagement() {
            this.Url = global::SPMWebApp.Properties.Settings.Default.SPMWebApp_ContactManagementService_ContactManagement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PrepareForContactEntryCompletedEventHandler PrepareForContactEntryCompleted;
        
        /// <remarks/>
        public event RetrieveByAccountNoCompletedEventHandler RetrieveByAccountNoCompleted;
        
        /// <remarks/>
        public event RetrieveUnContactedAssignmentCompletedEventHandler RetrieveUnContactedAssignmentCompleted;
        
        /// <remarks/>
        public event RetrieveUnContactedAssignmentByProjectIDCompletedEventHandler RetrieveUnContactedAssignmentByProjectIDCompleted;
        
        /// <remarks/>
        public event RetrieveClientInfoByShortKeyCompletedEventHandler RetrieveClientInfoByShortKeyCompleted;
        
        /// <remarks/>
        public event GetDetailUserInformationCompletedEventHandler GetDetailUserInformationCompleted;
        
        /// <remarks/>
        public event GetSeminorRegistrationByAccNoCompletedEventHandler GetSeminorRegistrationByAccNoCompleted;
        
        /// <remarks/>
        public event getContactHistoryByAccountNoCompletedEventHandler getContactHistoryByAccountNoCompleted;
        
        /// <remarks/>
        public event RetrieveContactHistoryByCriteriaCompletedEventHandler RetrieveContactHistoryByCriteriaCompleted;
        
        /// <remarks/>
        public event InsertClientContactCompletedEventHandler InsertClientContactCompleted;
        
        /// <remarks/>
        public event UpdateClientContactCompletedEventHandler UpdateClientContactCompleted;
        
        /// <remarks/>
        public event UpdateClientContactFollowUpStatusCompletedEventHandler UpdateClientContactFollowUpStatusCompleted;
        
        /// <remarks/>
        public event DeleteClientContactCompletedEventHandler DeleteClientContactCompleted;
        
        /// <remarks/>
        public event PrepareForContactHistoryCompletedEventHandler PrepareForContactHistoryCompleted;
        
        /// <remarks/>
        public event PrepareForContactHistoryByUserOrSupervisorCompletedEventHandler PrepareForContactHistoryByUserOrSupervisorCompleted;
        
        /// <remarks/>
        public event RetrieveContactAnalysisCompletedEventHandler RetrieveContactAnalysisCompleted;
        
        /// <remarks/>
        public event RetrieveCallReportCompletedEventHandler RetrieveCallReportCompleted;
        
        /// <remarks/>
        public event RetrieveCallReportByUserOrSupervisorCompletedEventHandler RetrieveCallReportByUserOrSupervisorCompleted;
        
        /// <remarks/>
        public event RetrieveCallReportDetailCompletedEventHandler RetrieveCallReportDetailCompleted;
        
        /// <remarks/>
        public event RetrieveCallReportProjectDetailCompletedEventHandler RetrieveCallReportProjectDetailCompleted;
        
        /// <remarks/>
        public event RetrieveClientAnalysisCompletedEventHandler RetrieveClientAnalysisCompleted;
        
        /// <remarks/>
        public event PrepareForClientAnalysisCompletedEventHandler PrepareForClientAnalysisCompleted;
        
        /// <remarks/>
        public event PrepareForClientAnalysisByUserOrSupervisorCompletedEventHandler PrepareForClientAnalysisByUserOrSupervisorCompleted;
        
        /// <remarks/>
        public event RetrieveContactEntryForTodayCompletedEventHandler RetrieveContactEntryForTodayCompleted;
        
        /// <remarks/>
        public event RetrieveCallReportByProjectNameCompletedEventHandler RetrieveCallReportByProjectNameCompleted;
        
        /// <remarks/>
        public event RetrieveCallReportByProjectNameByUserOrSupervisorCompletedEventHandler RetrieveCallReportByProjectNameByUserOrSupervisorCompleted;
        
        /// <remarks/>
        public event RetrieveContactHistoryByProjNameCompletedEventHandler RetrieveContactHistoryByProjNameCompleted;
        
        /// <remarks/>
        public event RetrieveContactAnalysisByProjectNameCompletedEventHandler RetrieveContactAnalysisByProjectNameCompleted;
        
        /// <remarks/>
        public event RetrieveCommissionEarnedByClientAcctNoCompletedEventHandler RetrieveCommissionEarnedByClientAcctNoCompleted;
        
        /// <remarks/>
        public event RetrieveCashAndEquivalentByUserAcctNoCompletedEventHandler RetrieveCashAndEquivalentByUserAcctNoCompleted;
        
        /// <remarks/>
        public event RetrieveAvailableFundsByUserAcctNoCompletedEventHandler RetrieveAvailableFundsByUserAcctNoCompleted;
        
        /// <remarks/>
        public event RetrieveClientServiceTypeByClientAcctNoCompletedEventHandler RetrieveClientServiceTypeByClientAcctNoCompleted;
        
        /// <remarks/>
        public event PrepareForContactToFollowUpCompletedEventHandler PrepareForContactToFollowUpCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrepareForContactEntry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrepareForContactEntry(string userRole, string userId, string dbConnectionStr) {
            object[] results = this.Invoke("PrepareForContactEntry", new object[] {
                        userRole,
                        userId,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareForContactEntryAsync(string userRole, string userId, string dbConnectionStr) {
            this.PrepareForContactEntryAsync(userRole, userId, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void PrepareForContactEntryAsync(string userRole, string userId, string dbConnectionStr, object userState) {
            if ((this.PrepareForContactEntryOperationCompleted == null)) {
                this.PrepareForContactEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareForContactEntryOperationCompleted);
            }
            this.InvokeAsync("PrepareForContactEntry", new object[] {
                        userRole,
                        userId,
                        dbConnectionStr}, this.PrepareForContactEntryOperationCompleted, userState);
        }
        
        private void OnPrepareForContactEntryOperationCompleted(object arg) {
            if ((this.PrepareForContactEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareForContactEntryCompleted(this, new PrepareForContactEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveByAccountNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveByAccountNo(string AccountNo, string Param, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveByAccountNo", new object[] {
                        AccountNo,
                        Param,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveByAccountNoAsync(string AccountNo, string Param, string dbConnectionStr) {
            this.RetrieveByAccountNoAsync(AccountNo, Param, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveByAccountNoAsync(string AccountNo, string Param, string dbConnectionStr, object userState) {
            if ((this.RetrieveByAccountNoOperationCompleted == null)) {
                this.RetrieveByAccountNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveByAccountNoOperationCompleted);
            }
            this.InvokeAsync("RetrieveByAccountNo", new object[] {
                        AccountNo,
                        Param,
                        dbConnectionStr}, this.RetrieveByAccountNoOperationCompleted, userState);
        }
        
        private void OnRetrieveByAccountNoOperationCompleted(object arg) {
            if ((this.RetrieveByAccountNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveByAccountNoCompleted(this, new RetrieveByAccountNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveUnContactedAssignment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveUnContactedAssignment(string dealerCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveUnContactedAssignment", new object[] {
                        dealerCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveUnContactedAssignmentAsync(string dealerCode, string dbConnectionStr) {
            this.RetrieveUnContactedAssignmentAsync(dealerCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveUnContactedAssignmentAsync(string dealerCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveUnContactedAssignmentOperationCompleted == null)) {
                this.RetrieveUnContactedAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveUnContactedAssignmentOperationCompleted);
            }
            this.InvokeAsync("RetrieveUnContactedAssignment", new object[] {
                        dealerCode,
                        dbConnectionStr}, this.RetrieveUnContactedAssignmentOperationCompleted, userState);
        }
        
        private void OnRetrieveUnContactedAssignmentOperationCompleted(object arg) {
            if ((this.RetrieveUnContactedAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveUnContactedAssignmentCompleted(this, new RetrieveUnContactedAssignmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveUnContactedAssignmentByProjectID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveUnContactedAssignmentByProjectID(string dealerCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveUnContactedAssignmentByProjectID", new object[] {
                        dealerCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveUnContactedAssignmentByProjectIDAsync(string dealerCode, string dbConnectionStr) {
            this.RetrieveUnContactedAssignmentByProjectIDAsync(dealerCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveUnContactedAssignmentByProjectIDAsync(string dealerCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveUnContactedAssignmentByProjectIDOperationCompleted == null)) {
                this.RetrieveUnContactedAssignmentByProjectIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveUnContactedAssignmentByProjectIDOperationCompleted);
            }
            this.InvokeAsync("RetrieveUnContactedAssignmentByProjectID", new object[] {
                        dealerCode,
                        dbConnectionStr}, this.RetrieveUnContactedAssignmentByProjectIDOperationCompleted, userState);
        }
        
        private void OnRetrieveUnContactedAssignmentByProjectIDOperationCompleted(object arg) {
            if ((this.RetrieveUnContactedAssignmentByProjectIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveUnContactedAssignmentByProjectIDCompleted(this, new RetrieveUnContactedAssignmentByProjectIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveClientInfoByShortKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveClientInfoByShortKey(string shortKey, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveClientInfoByShortKey", new object[] {
                        shortKey,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveClientInfoByShortKeyAsync(string shortKey, string dbConnectionStr) {
            this.RetrieveClientInfoByShortKeyAsync(shortKey, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveClientInfoByShortKeyAsync(string shortKey, string dbConnectionStr, object userState) {
            if ((this.RetrieveClientInfoByShortKeyOperationCompleted == null)) {
                this.RetrieveClientInfoByShortKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveClientInfoByShortKeyOperationCompleted);
            }
            this.InvokeAsync("RetrieveClientInfoByShortKey", new object[] {
                        shortKey,
                        dbConnectionStr}, this.RetrieveClientInfoByShortKeyOperationCompleted, userState);
        }
        
        private void OnRetrieveClientInfoByShortKeyOperationCompleted(object arg) {
            if ((this.RetrieveClientInfoByShortKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveClientInfoByShortKeyCompleted(this, new RetrieveClientInfoByShortKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDetailUserInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDetailUserInformation(string accountNo, string dbConnectionStr) {
            object[] results = this.Invoke("GetDetailUserInformation", new object[] {
                        accountNo,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDetailUserInformationAsync(string accountNo, string dbConnectionStr) {
            this.GetDetailUserInformationAsync(accountNo, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void GetDetailUserInformationAsync(string accountNo, string dbConnectionStr, object userState) {
            if ((this.GetDetailUserInformationOperationCompleted == null)) {
                this.GetDetailUserInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDetailUserInformationOperationCompleted);
            }
            this.InvokeAsync("GetDetailUserInformation", new object[] {
                        accountNo,
                        dbConnectionStr}, this.GetDetailUserInformationOperationCompleted, userState);
        }
        
        private void OnGetDetailUserInformationOperationCompleted(object arg) {
            if ((this.GetDetailUserInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDetailUserInformationCompleted(this, new GetDetailUserInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSeminorRegistrationByAccNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeminorRegistrationByAccNo(string accountNo, string dbConnectionStr) {
            object[] results = this.Invoke("GetSeminorRegistrationByAccNo", new object[] {
                        accountNo,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeminorRegistrationByAccNoAsync(string accountNo, string dbConnectionStr) {
            this.GetSeminorRegistrationByAccNoAsync(accountNo, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void GetSeminorRegistrationByAccNoAsync(string accountNo, string dbConnectionStr, object userState) {
            if ((this.GetSeminorRegistrationByAccNoOperationCompleted == null)) {
                this.GetSeminorRegistrationByAccNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeminorRegistrationByAccNoOperationCompleted);
            }
            this.InvokeAsync("GetSeminorRegistrationByAccNo", new object[] {
                        accountNo,
                        dbConnectionStr}, this.GetSeminorRegistrationByAccNoOperationCompleted, userState);
        }
        
        private void OnGetSeminorRegistrationByAccNoOperationCompleted(object arg) {
            if ((this.GetSeminorRegistrationByAccNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeminorRegistrationByAccNoCompleted(this, new GetSeminorRegistrationByAccNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getContactHistoryByAccountNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getContactHistoryByAccountNo(string accountNo, string dbConnectionStr) {
            object[] results = this.Invoke("getContactHistoryByAccountNo", new object[] {
                        accountNo,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getContactHistoryByAccountNoAsync(string accountNo, string dbConnectionStr) {
            this.getContactHistoryByAccountNoAsync(accountNo, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void getContactHistoryByAccountNoAsync(string accountNo, string dbConnectionStr, object userState) {
            if ((this.getContactHistoryByAccountNoOperationCompleted == null)) {
                this.getContactHistoryByAccountNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContactHistoryByAccountNoOperationCompleted);
            }
            this.InvokeAsync("getContactHistoryByAccountNo", new object[] {
                        accountNo,
                        dbConnectionStr}, this.getContactHistoryByAccountNoOperationCompleted, userState);
        }
        
        private void OngetContactHistoryByAccountNoOperationCompleted(object arg) {
            if ((this.getContactHistoryByAccountNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContactHistoryByAccountNoCompleted(this, new getContactHistoryByAccountNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveContactHistoryByCriteria", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveContactHistoryByCriteria(string accountNo, string dealerCode, string dateFrom, string dateTo, string rank, string preference, string content, string teamCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveContactHistoryByCriteria", new object[] {
                        accountNo,
                        dealerCode,
                        dateFrom,
                        dateTo,
                        rank,
                        preference,
                        content,
                        teamCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveContactHistoryByCriteriaAsync(string accountNo, string dealerCode, string dateFrom, string dateTo, string rank, string preference, string content, string teamCode, string dbConnectionStr) {
            this.RetrieveContactHistoryByCriteriaAsync(accountNo, dealerCode, dateFrom, dateTo, rank, preference, content, teamCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveContactHistoryByCriteriaAsync(string accountNo, string dealerCode, string dateFrom, string dateTo, string rank, string preference, string content, string teamCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveContactHistoryByCriteriaOperationCompleted == null)) {
                this.RetrieveContactHistoryByCriteriaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveContactHistoryByCriteriaOperationCompleted);
            }
            this.InvokeAsync("RetrieveContactHistoryByCriteria", new object[] {
                        accountNo,
                        dealerCode,
                        dateFrom,
                        dateTo,
                        rank,
                        preference,
                        content,
                        teamCode,
                        dbConnectionStr}, this.RetrieveContactHistoryByCriteriaOperationCompleted, userState);
        }
        
        private void OnRetrieveContactHistoryByCriteriaOperationCompleted(object arg) {
            if ((this.RetrieveContactHistoryByCriteriaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveContactHistoryByCriteriaCompleted(this, new RetrieveContactHistoryByCriteriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertClientContact", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InsertClientContact(
                    string dealerCode, 
                    string userId, 
                    string acctNo, 
                    string shortKey, 
                    string sex, 
                    string contactPhone, 
                    string content, 
                    string preferA, 
                    string preferB, 
                    string remark, 
                    string rank, 
                    string keep, 
                    string adminId, 
                    string lastAcctNo, 
                    string lastClientName, 
                    int followupStatus, 
                    string followUpDealer, 
                    string followUpDate, 
                    string projectID, 
                    string dbConnectionStr) {
            object[] results = this.Invoke("InsertClientContact", new object[] {
                        dealerCode,
                        userId,
                        acctNo,
                        shortKey,
                        sex,
                        contactPhone,
                        content,
                        preferA,
                        preferB,
                        remark,
                        rank,
                        keep,
                        adminId,
                        lastAcctNo,
                        lastClientName,
                        followupStatus,
                        followUpDealer,
                        followUpDate,
                        projectID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InsertClientContactAsync(
                    string dealerCode, 
                    string userId, 
                    string acctNo, 
                    string shortKey, 
                    string sex, 
                    string contactPhone, 
                    string content, 
                    string preferA, 
                    string preferB, 
                    string remark, 
                    string rank, 
                    string keep, 
                    string adminId, 
                    string lastAcctNo, 
                    string lastClientName, 
                    int followupStatus, 
                    string followUpDealer, 
                    string followUpDate, 
                    string projectID, 
                    string dbConnectionStr) {
            this.InsertClientContactAsync(dealerCode, userId, acctNo, shortKey, sex, contactPhone, content, preferA, preferB, remark, rank, keep, adminId, lastAcctNo, lastClientName, followupStatus, followUpDealer, followUpDate, projectID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void InsertClientContactAsync(
                    string dealerCode, 
                    string userId, 
                    string acctNo, 
                    string shortKey, 
                    string sex, 
                    string contactPhone, 
                    string content, 
                    string preferA, 
                    string preferB, 
                    string remark, 
                    string rank, 
                    string keep, 
                    string adminId, 
                    string lastAcctNo, 
                    string lastClientName, 
                    int followupStatus, 
                    string followUpDealer, 
                    string followUpDate, 
                    string projectID, 
                    string dbConnectionStr, 
                    object userState) {
            if ((this.InsertClientContactOperationCompleted == null)) {
                this.InsertClientContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertClientContactOperationCompleted);
            }
            this.InvokeAsync("InsertClientContact", new object[] {
                        dealerCode,
                        userId,
                        acctNo,
                        shortKey,
                        sex,
                        contactPhone,
                        content,
                        preferA,
                        preferB,
                        remark,
                        rank,
                        keep,
                        adminId,
                        lastAcctNo,
                        lastClientName,
                        followupStatus,
                        followUpDealer,
                        followUpDate,
                        projectID,
                        dbConnectionStr}, this.InsertClientContactOperationCompleted, userState);
        }
        
        private void OnInsertClientContactOperationCompleted(object arg) {
            if ((this.InsertClientContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertClientContactCompleted(this, new InsertClientContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateClientContact", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] UpdateClientContact(
                    string dealerCode, 
                    string userId, 
                    string acctNo, 
                    string shortKey, 
                    string sex, 
                    string contactPhone, 
                    string content, 
                    string preferA, 
                    string preferB, 
                    string remark, 
                    string rank, 
                    string keep, 
                    string adminId, 
                    string recId, 
                    int folowup, 
                    string followUpDealer, 
                    string followUpDate, 
                    string projectID, 
                    string dbConnectionStr) {
            object[] results = this.Invoke("UpdateClientContact", new object[] {
                        dealerCode,
                        userId,
                        acctNo,
                        shortKey,
                        sex,
                        contactPhone,
                        content,
                        preferA,
                        preferB,
                        remark,
                        rank,
                        keep,
                        adminId,
                        recId,
                        folowup,
                        followUpDealer,
                        followUpDate,
                        projectID,
                        dbConnectionStr});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClientContactAsync(
                    string dealerCode, 
                    string userId, 
                    string acctNo, 
                    string shortKey, 
                    string sex, 
                    string contactPhone, 
                    string content, 
                    string preferA, 
                    string preferB, 
                    string remark, 
                    string rank, 
                    string keep, 
                    string adminId, 
                    string recId, 
                    int folowup, 
                    string followUpDealer, 
                    string followUpDate, 
                    string projectID, 
                    string dbConnectionStr) {
            this.UpdateClientContactAsync(dealerCode, userId, acctNo, shortKey, sex, contactPhone, content, preferA, preferB, remark, rank, keep, adminId, recId, folowup, followUpDealer, followUpDate, projectID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void UpdateClientContactAsync(
                    string dealerCode, 
                    string userId, 
                    string acctNo, 
                    string shortKey, 
                    string sex, 
                    string contactPhone, 
                    string content, 
                    string preferA, 
                    string preferB, 
                    string remark, 
                    string rank, 
                    string keep, 
                    string adminId, 
                    string recId, 
                    int folowup, 
                    string followUpDealer, 
                    string followUpDate, 
                    string projectID, 
                    string dbConnectionStr, 
                    object userState) {
            if ((this.UpdateClientContactOperationCompleted == null)) {
                this.UpdateClientContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientContactOperationCompleted);
            }
            this.InvokeAsync("UpdateClientContact", new object[] {
                        dealerCode,
                        userId,
                        acctNo,
                        shortKey,
                        sex,
                        contactPhone,
                        content,
                        preferA,
                        preferB,
                        remark,
                        rank,
                        keep,
                        adminId,
                        recId,
                        folowup,
                        followUpDealer,
                        followUpDate,
                        projectID,
                        dbConnectionStr}, this.UpdateClientContactOperationCompleted, userState);
        }
        
        private void OnUpdateClientContactOperationCompleted(object arg) {
            if ((this.UpdateClientContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientContactCompleted(this, new UpdateClientContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateClientContactFollowUpStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] UpdateClientContactFollowUpStatus(string dbConnectionStr, string recId, string followUpStatus) {
            object[] results = this.Invoke("UpdateClientContactFollowUpStatus", new object[] {
                        dbConnectionStr,
                        recId,
                        followUpStatus});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClientContactFollowUpStatusAsync(string dbConnectionStr, string recId, string followUpStatus) {
            this.UpdateClientContactFollowUpStatusAsync(dbConnectionStr, recId, followUpStatus, null);
        }
        
        /// <remarks/>
        public void UpdateClientContactFollowUpStatusAsync(string dbConnectionStr, string recId, string followUpStatus, object userState) {
            if ((this.UpdateClientContactFollowUpStatusOperationCompleted == null)) {
                this.UpdateClientContactFollowUpStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientContactFollowUpStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateClientContactFollowUpStatus", new object[] {
                        dbConnectionStr,
                        recId,
                        followUpStatus}, this.UpdateClientContactFollowUpStatusOperationCompleted, userState);
        }
        
        private void OnUpdateClientContactFollowUpStatusOperationCompleted(object arg) {
            if ((this.UpdateClientContactFollowUpStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientContactFollowUpStatusCompleted(this, new UpdateClientContactFollowUpStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteClientContact", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DeleteClientContact(string recId, string dealerCode, string dbConnectionStr) {
            object[] results = this.Invoke("DeleteClientContact", new object[] {
                        recId,
                        dealerCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteClientContactAsync(string recId, string dealerCode, string dbConnectionStr) {
            this.DeleteClientContactAsync(recId, dealerCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void DeleteClientContactAsync(string recId, string dealerCode, string dbConnectionStr, object userState) {
            if ((this.DeleteClientContactOperationCompleted == null)) {
                this.DeleteClientContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteClientContactOperationCompleted);
            }
            this.InvokeAsync("DeleteClientContact", new object[] {
                        recId,
                        dealerCode,
                        dbConnectionStr}, this.DeleteClientContactOperationCompleted, userState);
        }
        
        private void OnDeleteClientContactOperationCompleted(object arg) {
            if ((this.DeleteClientContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteClientContactCompleted(this, new DeleteClientContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrepareForContactHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrepareForContactHistory(string dbConnectionStr) {
            object[] results = this.Invoke("PrepareForContactHistory", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareForContactHistoryAsync(string dbConnectionStr) {
            this.PrepareForContactHistoryAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void PrepareForContactHistoryAsync(string dbConnectionStr, object userState) {
            if ((this.PrepareForContactHistoryOperationCompleted == null)) {
                this.PrepareForContactHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareForContactHistoryOperationCompleted);
            }
            this.InvokeAsync("PrepareForContactHistory", new object[] {
                        dbConnectionStr}, this.PrepareForContactHistoryOperationCompleted, userState);
        }
        
        private void OnPrepareForContactHistoryOperationCompleted(object arg) {
            if ((this.PrepareForContactHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareForContactHistoryCompleted(this, new PrepareForContactHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrepareForContactHistoryByUserOrSupervisor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrepareForContactHistoryByUserOrSupervisor(string Param, string dbConnectionStr) {
            object[] results = this.Invoke("PrepareForContactHistoryByUserOrSupervisor", new object[] {
                        Param,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareForContactHistoryByUserOrSupervisorAsync(string Param, string dbConnectionStr) {
            this.PrepareForContactHistoryByUserOrSupervisorAsync(Param, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void PrepareForContactHistoryByUserOrSupervisorAsync(string Param, string dbConnectionStr, object userState) {
            if ((this.PrepareForContactHistoryByUserOrSupervisorOperationCompleted == null)) {
                this.PrepareForContactHistoryByUserOrSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareForContactHistoryByUserOrSupervisorOperationCompleted);
            }
            this.InvokeAsync("PrepareForContactHistoryByUserOrSupervisor", new object[] {
                        Param,
                        dbConnectionStr}, this.PrepareForContactHistoryByUserOrSupervisorOperationCompleted, userState);
        }
        
        private void OnPrepareForContactHistoryByUserOrSupervisorOperationCompleted(object arg) {
            if ((this.PrepareForContactHistoryByUserOrSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareForContactHistoryByUserOrSupervisorCompleted(this, new PrepareForContactHistoryByUserOrSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveContactAnalysis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveContactAnalysis(string dealerCode, string accountNo, string dateFrom, string dateTo, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveContactAnalysis", new object[] {
                        dealerCode,
                        accountNo,
                        dateFrom,
                        dateTo,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveContactAnalysisAsync(string dealerCode, string accountNo, string dateFrom, string dateTo, string dbConnectionStr) {
            this.RetrieveContactAnalysisAsync(dealerCode, accountNo, dateFrom, dateTo, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveContactAnalysisAsync(string dealerCode, string accountNo, string dateFrom, string dateTo, string dbConnectionStr, object userState) {
            if ((this.RetrieveContactAnalysisOperationCompleted == null)) {
                this.RetrieveContactAnalysisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveContactAnalysisOperationCompleted);
            }
            this.InvokeAsync("RetrieveContactAnalysis", new object[] {
                        dealerCode,
                        accountNo,
                        dateFrom,
                        dateTo,
                        dbConnectionStr}, this.RetrieveContactAnalysisOperationCompleted, userState);
        }
        
        private void OnRetrieveContactAnalysisOperationCompleted(object arg) {
            if ((this.RetrieveContactAnalysisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveContactAnalysisCompleted(this, new RetrieveContactAnalysisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCallReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCallReport(string assignDate, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveCallReport", new object[] {
                        assignDate,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCallReportAsync(string assignDate, string dbConnectionStr) {
            this.RetrieveCallReportAsync(assignDate, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveCallReportAsync(string assignDate, string dbConnectionStr, object userState) {
            if ((this.RetrieveCallReportOperationCompleted == null)) {
                this.RetrieveCallReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCallReportOperationCompleted);
            }
            this.InvokeAsync("RetrieveCallReport", new object[] {
                        assignDate,
                        dbConnectionStr}, this.RetrieveCallReportOperationCompleted, userState);
        }
        
        private void OnRetrieveCallReportOperationCompleted(object arg) {
            if ((this.RetrieveCallReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCallReportCompleted(this, new RetrieveCallReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCallReportByUserOrSupervisor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCallReportByUserOrSupervisor(string assignDate, string Param, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveCallReportByUserOrSupervisor", new object[] {
                        assignDate,
                        Param,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCallReportByUserOrSupervisorAsync(string assignDate, string Param, string dbConnectionStr) {
            this.RetrieveCallReportByUserOrSupervisorAsync(assignDate, Param, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveCallReportByUserOrSupervisorAsync(string assignDate, string Param, string dbConnectionStr, object userState) {
            if ((this.RetrieveCallReportByUserOrSupervisorOperationCompleted == null)) {
                this.RetrieveCallReportByUserOrSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCallReportByUserOrSupervisorOperationCompleted);
            }
            this.InvokeAsync("RetrieveCallReportByUserOrSupervisor", new object[] {
                        assignDate,
                        Param,
                        dbConnectionStr}, this.RetrieveCallReportByUserOrSupervisorOperationCompleted, userState);
        }
        
        private void OnRetrieveCallReportByUserOrSupervisorOperationCompleted(object arg) {
            if ((this.RetrieveCallReportByUserOrSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCallReportByUserOrSupervisorCompleted(this, new RetrieveCallReportByUserOrSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCallReportDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCallReportDetail(string assignDate, string dealerCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveCallReportDetail", new object[] {
                        assignDate,
                        dealerCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCallReportDetailAsync(string assignDate, string dealerCode, string dbConnectionStr) {
            this.RetrieveCallReportDetailAsync(assignDate, dealerCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveCallReportDetailAsync(string assignDate, string dealerCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveCallReportDetailOperationCompleted == null)) {
                this.RetrieveCallReportDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCallReportDetailOperationCompleted);
            }
            this.InvokeAsync("RetrieveCallReportDetail", new object[] {
                        assignDate,
                        dealerCode,
                        dbConnectionStr}, this.RetrieveCallReportDetailOperationCompleted, userState);
        }
        
        private void OnRetrieveCallReportDetailOperationCompleted(object arg) {
            if ((this.RetrieveCallReportDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCallReportDetailCompleted(this, new RetrieveCallReportDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCallReportProjectDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCallReportProjectDetail(string ProjectName, string dealerCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveCallReportProjectDetail", new object[] {
                        ProjectName,
                        dealerCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCallReportProjectDetailAsync(string ProjectName, string dealerCode, string dbConnectionStr) {
            this.RetrieveCallReportProjectDetailAsync(ProjectName, dealerCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveCallReportProjectDetailAsync(string ProjectName, string dealerCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveCallReportProjectDetailOperationCompleted == null)) {
                this.RetrieveCallReportProjectDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCallReportProjectDetailOperationCompleted);
            }
            this.InvokeAsync("RetrieveCallReportProjectDetail", new object[] {
                        ProjectName,
                        dealerCode,
                        dbConnectionStr}, this.RetrieveCallReportProjectDetailOperationCompleted, userState);
        }
        
        private void OnRetrieveCallReportProjectDetailOperationCompleted(object arg) {
            if ((this.RetrieveCallReportProjectDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCallReportProjectDetailCompleted(this, new RetrieveCallReportProjectDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveClientAnalysis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveClientAnalysis(string teamCode, string dealerCode, string accountCreateDate, string lastTradeDate, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveClientAnalysis", new object[] {
                        teamCode,
                        dealerCode,
                        accountCreateDate,
                        lastTradeDate,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveClientAnalysisAsync(string teamCode, string dealerCode, string accountCreateDate, string lastTradeDate, string dbConnectionStr) {
            this.RetrieveClientAnalysisAsync(teamCode, dealerCode, accountCreateDate, lastTradeDate, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveClientAnalysisAsync(string teamCode, string dealerCode, string accountCreateDate, string lastTradeDate, string dbConnectionStr, object userState) {
            if ((this.RetrieveClientAnalysisOperationCompleted == null)) {
                this.RetrieveClientAnalysisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveClientAnalysisOperationCompleted);
            }
            this.InvokeAsync("RetrieveClientAnalysis", new object[] {
                        teamCode,
                        dealerCode,
                        accountCreateDate,
                        lastTradeDate,
                        dbConnectionStr}, this.RetrieveClientAnalysisOperationCompleted, userState);
        }
        
        private void OnRetrieveClientAnalysisOperationCompleted(object arg) {
            if ((this.RetrieveClientAnalysisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveClientAnalysisCompleted(this, new RetrieveClientAnalysisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrepareForClientAnalysis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrepareForClientAnalysis(string dbConnectionStr) {
            object[] results = this.Invoke("PrepareForClientAnalysis", new object[] {
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareForClientAnalysisAsync(string dbConnectionStr) {
            this.PrepareForClientAnalysisAsync(dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void PrepareForClientAnalysisAsync(string dbConnectionStr, object userState) {
            if ((this.PrepareForClientAnalysisOperationCompleted == null)) {
                this.PrepareForClientAnalysisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareForClientAnalysisOperationCompleted);
            }
            this.InvokeAsync("PrepareForClientAnalysis", new object[] {
                        dbConnectionStr}, this.PrepareForClientAnalysisOperationCompleted, userState);
        }
        
        private void OnPrepareForClientAnalysisOperationCompleted(object arg) {
            if ((this.PrepareForClientAnalysisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareForClientAnalysisCompleted(this, new PrepareForClientAnalysisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrepareForClientAnalysisByUserOrSupervisor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrepareForClientAnalysisByUserOrSupervisor(string Param, string dbConnectionStr) {
            object[] results = this.Invoke("PrepareForClientAnalysisByUserOrSupervisor", new object[] {
                        Param,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareForClientAnalysisByUserOrSupervisorAsync(string Param, string dbConnectionStr) {
            this.PrepareForClientAnalysisByUserOrSupervisorAsync(Param, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void PrepareForClientAnalysisByUserOrSupervisorAsync(string Param, string dbConnectionStr, object userState) {
            if ((this.PrepareForClientAnalysisByUserOrSupervisorOperationCompleted == null)) {
                this.PrepareForClientAnalysisByUserOrSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareForClientAnalysisByUserOrSupervisorOperationCompleted);
            }
            this.InvokeAsync("PrepareForClientAnalysisByUserOrSupervisor", new object[] {
                        Param,
                        dbConnectionStr}, this.PrepareForClientAnalysisByUserOrSupervisorOperationCompleted, userState);
        }
        
        private void OnPrepareForClientAnalysisByUserOrSupervisorOperationCompleted(object arg) {
            if ((this.PrepareForClientAnalysisByUserOrSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareForClientAnalysisByUserOrSupervisorCompleted(this, new PrepareForClientAnalysisByUserOrSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveContactEntryForToday", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveContactEntryForToday(string dealerCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveContactEntryForToday", new object[] {
                        dealerCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveContactEntryForTodayAsync(string dealerCode, string dbConnectionStr) {
            this.RetrieveContactEntryForTodayAsync(dealerCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveContactEntryForTodayAsync(string dealerCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveContactEntryForTodayOperationCompleted == null)) {
                this.RetrieveContactEntryForTodayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveContactEntryForTodayOperationCompleted);
            }
            this.InvokeAsync("RetrieveContactEntryForToday", new object[] {
                        dealerCode,
                        dbConnectionStr}, this.RetrieveContactEntryForTodayOperationCompleted, userState);
        }
        
        private void OnRetrieveContactEntryForTodayOperationCompleted(object arg) {
            if ((this.RetrieveContactEntryForTodayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveContactEntryForTodayCompleted(this, new RetrieveContactEntryForTodayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCallReportByProjectName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCallReportByProjectName(string ProjName, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveCallReportByProjectName", new object[] {
                        ProjName,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCallReportByProjectNameAsync(string ProjName, string dbConnectionStr) {
            this.RetrieveCallReportByProjectNameAsync(ProjName, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveCallReportByProjectNameAsync(string ProjName, string dbConnectionStr, object userState) {
            if ((this.RetrieveCallReportByProjectNameOperationCompleted == null)) {
                this.RetrieveCallReportByProjectNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCallReportByProjectNameOperationCompleted);
            }
            this.InvokeAsync("RetrieveCallReportByProjectName", new object[] {
                        ProjName,
                        dbConnectionStr}, this.RetrieveCallReportByProjectNameOperationCompleted, userState);
        }
        
        private void OnRetrieveCallReportByProjectNameOperationCompleted(object arg) {
            if ((this.RetrieveCallReportByProjectNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCallReportByProjectNameCompleted(this, new RetrieveCallReportByProjectNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCallReportByProjectNameByUserOrSupervisor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCallReportByProjectNameByUserOrSupervisor(string ProjName, string Param, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveCallReportByProjectNameByUserOrSupervisor", new object[] {
                        ProjName,
                        Param,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCallReportByProjectNameByUserOrSupervisorAsync(string ProjName, string Param, string dbConnectionStr) {
            this.RetrieveCallReportByProjectNameByUserOrSupervisorAsync(ProjName, Param, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveCallReportByProjectNameByUserOrSupervisorAsync(string ProjName, string Param, string dbConnectionStr, object userState) {
            if ((this.RetrieveCallReportByProjectNameByUserOrSupervisorOperationCompleted == null)) {
                this.RetrieveCallReportByProjectNameByUserOrSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCallReportByProjectNameByUserOrSupervisorOperationCompleted);
            }
            this.InvokeAsync("RetrieveCallReportByProjectNameByUserOrSupervisor", new object[] {
                        ProjName,
                        Param,
                        dbConnectionStr}, this.RetrieveCallReportByProjectNameByUserOrSupervisorOperationCompleted, userState);
        }
        
        private void OnRetrieveCallReportByProjectNameByUserOrSupervisorOperationCompleted(object arg) {
            if ((this.RetrieveCallReportByProjectNameByUserOrSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCallReportByProjectNameByUserOrSupervisorCompleted(this, new RetrieveCallReportByProjectNameByUserOrSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveContactHistoryByProjName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveContactHistoryByProjName(string accountNo, string dealerCode, string ProjID, string rank, string preference, string content, string teamCode, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveContactHistoryByProjName", new object[] {
                        accountNo,
                        dealerCode,
                        ProjID,
                        rank,
                        preference,
                        content,
                        teamCode,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveContactHistoryByProjNameAsync(string accountNo, string dealerCode, string ProjID, string rank, string preference, string content, string teamCode, string dbConnectionStr) {
            this.RetrieveContactHistoryByProjNameAsync(accountNo, dealerCode, ProjID, rank, preference, content, teamCode, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveContactHistoryByProjNameAsync(string accountNo, string dealerCode, string ProjID, string rank, string preference, string content, string teamCode, string dbConnectionStr, object userState) {
            if ((this.RetrieveContactHistoryByProjNameOperationCompleted == null)) {
                this.RetrieveContactHistoryByProjNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveContactHistoryByProjNameOperationCompleted);
            }
            this.InvokeAsync("RetrieveContactHistoryByProjName", new object[] {
                        accountNo,
                        dealerCode,
                        ProjID,
                        rank,
                        preference,
                        content,
                        teamCode,
                        dbConnectionStr}, this.RetrieveContactHistoryByProjNameOperationCompleted, userState);
        }
        
        private void OnRetrieveContactHistoryByProjNameOperationCompleted(object arg) {
            if ((this.RetrieveContactHistoryByProjNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveContactHistoryByProjNameCompleted(this, new RetrieveContactHistoryByProjNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveContactAnalysisByProjectName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveContactAnalysisByProjectName(string dealerCode, string accountNo, string ProjID, string dbConnectionStr) {
            object[] results = this.Invoke("RetrieveContactAnalysisByProjectName", new object[] {
                        dealerCode,
                        accountNo,
                        ProjID,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveContactAnalysisByProjectNameAsync(string dealerCode, string accountNo, string ProjID, string dbConnectionStr) {
            this.RetrieveContactAnalysisByProjectNameAsync(dealerCode, accountNo, ProjID, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void RetrieveContactAnalysisByProjectNameAsync(string dealerCode, string accountNo, string ProjID, string dbConnectionStr, object userState) {
            if ((this.RetrieveContactAnalysisByProjectNameOperationCompleted == null)) {
                this.RetrieveContactAnalysisByProjectNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveContactAnalysisByProjectNameOperationCompleted);
            }
            this.InvokeAsync("RetrieveContactAnalysisByProjectName", new object[] {
                        dealerCode,
                        accountNo,
                        ProjID,
                        dbConnectionStr}, this.RetrieveContactAnalysisByProjectNameOperationCompleted, userState);
        }
        
        private void OnRetrieveContactAnalysisByProjectNameOperationCompleted(object arg) {
            if ((this.RetrieveContactAnalysisByProjectNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveContactAnalysisByProjectNameCompleted(this, new RetrieveContactAnalysisByProjectNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCommissionEarnedByClientAcctNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCommissionEarnedByClientAcctNo(string dbConnectionStr, string acctNo) {
            object[] results = this.Invoke("RetrieveCommissionEarnedByClientAcctNo", new object[] {
                        dbConnectionStr,
                        acctNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCommissionEarnedByClientAcctNoAsync(string dbConnectionStr, string acctNo) {
            this.RetrieveCommissionEarnedByClientAcctNoAsync(dbConnectionStr, acctNo, null);
        }
        
        /// <remarks/>
        public void RetrieveCommissionEarnedByClientAcctNoAsync(string dbConnectionStr, string acctNo, object userState) {
            if ((this.RetrieveCommissionEarnedByClientAcctNoOperationCompleted == null)) {
                this.RetrieveCommissionEarnedByClientAcctNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCommissionEarnedByClientAcctNoOperationCompleted);
            }
            this.InvokeAsync("RetrieveCommissionEarnedByClientAcctNo", new object[] {
                        dbConnectionStr,
                        acctNo}, this.RetrieveCommissionEarnedByClientAcctNoOperationCompleted, userState);
        }
        
        private void OnRetrieveCommissionEarnedByClientAcctNoOperationCompleted(object arg) {
            if ((this.RetrieveCommissionEarnedByClientAcctNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCommissionEarnedByClientAcctNoCompleted(this, new RetrieveCommissionEarnedByClientAcctNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveCashAndEquivalentByUserAcctNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveCashAndEquivalentByUserAcctNo(string dbConnectionStr, string acctNo) {
            object[] results = this.Invoke("RetrieveCashAndEquivalentByUserAcctNo", new object[] {
                        dbConnectionStr,
                        acctNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCashAndEquivalentByUserAcctNoAsync(string dbConnectionStr, string acctNo) {
            this.RetrieveCashAndEquivalentByUserAcctNoAsync(dbConnectionStr, acctNo, null);
        }
        
        /// <remarks/>
        public void RetrieveCashAndEquivalentByUserAcctNoAsync(string dbConnectionStr, string acctNo, object userState) {
            if ((this.RetrieveCashAndEquivalentByUserAcctNoOperationCompleted == null)) {
                this.RetrieveCashAndEquivalentByUserAcctNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCashAndEquivalentByUserAcctNoOperationCompleted);
            }
            this.InvokeAsync("RetrieveCashAndEquivalentByUserAcctNo", new object[] {
                        dbConnectionStr,
                        acctNo}, this.RetrieveCashAndEquivalentByUserAcctNoOperationCompleted, userState);
        }
        
        private void OnRetrieveCashAndEquivalentByUserAcctNoOperationCompleted(object arg) {
            if ((this.RetrieveCashAndEquivalentByUserAcctNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCashAndEquivalentByUserAcctNoCompleted(this, new RetrieveCashAndEquivalentByUserAcctNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveAvailableFundsByUserAcctNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveAvailableFundsByUserAcctNo(string dbConnectionStr, string acctNo) {
            object[] results = this.Invoke("RetrieveAvailableFundsByUserAcctNo", new object[] {
                        dbConnectionStr,
                        acctNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveAvailableFundsByUserAcctNoAsync(string dbConnectionStr, string acctNo) {
            this.RetrieveAvailableFundsByUserAcctNoAsync(dbConnectionStr, acctNo, null);
        }
        
        /// <remarks/>
        public void RetrieveAvailableFundsByUserAcctNoAsync(string dbConnectionStr, string acctNo, object userState) {
            if ((this.RetrieveAvailableFundsByUserAcctNoOperationCompleted == null)) {
                this.RetrieveAvailableFundsByUserAcctNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveAvailableFundsByUserAcctNoOperationCompleted);
            }
            this.InvokeAsync("RetrieveAvailableFundsByUserAcctNo", new object[] {
                        dbConnectionStr,
                        acctNo}, this.RetrieveAvailableFundsByUserAcctNoOperationCompleted, userState);
        }
        
        private void OnRetrieveAvailableFundsByUserAcctNoOperationCompleted(object arg) {
            if ((this.RetrieveAvailableFundsByUserAcctNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveAvailableFundsByUserAcctNoCompleted(this, new RetrieveAvailableFundsByUserAcctNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveClientServiceTypeByClientAcctNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveClientServiceTypeByClientAcctNo(string dbConnectionStr, string acctNo) {
            object[] results = this.Invoke("RetrieveClientServiceTypeByClientAcctNo", new object[] {
                        dbConnectionStr,
                        acctNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveClientServiceTypeByClientAcctNoAsync(string dbConnectionStr, string acctNo) {
            this.RetrieveClientServiceTypeByClientAcctNoAsync(dbConnectionStr, acctNo, null);
        }
        
        /// <remarks/>
        public void RetrieveClientServiceTypeByClientAcctNoAsync(string dbConnectionStr, string acctNo, object userState) {
            if ((this.RetrieveClientServiceTypeByClientAcctNoOperationCompleted == null)) {
                this.RetrieveClientServiceTypeByClientAcctNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveClientServiceTypeByClientAcctNoOperationCompleted);
            }
            this.InvokeAsync("RetrieveClientServiceTypeByClientAcctNo", new object[] {
                        dbConnectionStr,
                        acctNo}, this.RetrieveClientServiceTypeByClientAcctNoOperationCompleted, userState);
        }
        
        private void OnRetrieveClientServiceTypeByClientAcctNoOperationCompleted(object arg) {
            if ((this.RetrieveClientServiceTypeByClientAcctNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveClientServiceTypeByClientAcctNoCompleted(this, new RetrieveClientServiceTypeByClientAcctNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrepareForContactToFollowUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrepareForContactToFollowUp(string userId, string dbConnectionStr) {
            object[] results = this.Invoke("PrepareForContactToFollowUp", new object[] {
                        userId,
                        dbConnectionStr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareForContactToFollowUpAsync(string userId, string dbConnectionStr) {
            this.PrepareForContactToFollowUpAsync(userId, dbConnectionStr, null);
        }
        
        /// <remarks/>
        public void PrepareForContactToFollowUpAsync(string userId, string dbConnectionStr, object userState) {
            if ((this.PrepareForContactToFollowUpOperationCompleted == null)) {
                this.PrepareForContactToFollowUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareForContactToFollowUpOperationCompleted);
            }
            this.InvokeAsync("PrepareForContactToFollowUp", new object[] {
                        userId,
                        dbConnectionStr}, this.PrepareForContactToFollowUpOperationCompleted, userState);
        }
        
        private void OnPrepareForContactToFollowUpOperationCompleted(object arg) {
            if ((this.PrepareForContactToFollowUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareForContactToFollowUpCompleted(this, new PrepareForContactToFollowUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PrepareForContactEntryCompletedEventHandler(object sender, PrepareForContactEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareForContactEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareForContactEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveByAccountNoCompletedEventHandler(object sender, RetrieveByAccountNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveByAccountNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveByAccountNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveUnContactedAssignmentCompletedEventHandler(object sender, RetrieveUnContactedAssignmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveUnContactedAssignmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveUnContactedAssignmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveUnContactedAssignmentByProjectIDCompletedEventHandler(object sender, RetrieveUnContactedAssignmentByProjectIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveUnContactedAssignmentByProjectIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveUnContactedAssignmentByProjectIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveClientInfoByShortKeyCompletedEventHandler(object sender, RetrieveClientInfoByShortKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveClientInfoByShortKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveClientInfoByShortKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDetailUserInformationCompletedEventHandler(object sender, GetDetailUserInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDetailUserInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDetailUserInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSeminorRegistrationByAccNoCompletedEventHandler(object sender, GetSeminorRegistrationByAccNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeminorRegistrationByAccNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeminorRegistrationByAccNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getContactHistoryByAccountNoCompletedEventHandler(object sender, getContactHistoryByAccountNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getContactHistoryByAccountNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getContactHistoryByAccountNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveContactHistoryByCriteriaCompletedEventHandler(object sender, RetrieveContactHistoryByCriteriaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveContactHistoryByCriteriaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveContactHistoryByCriteriaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertClientContactCompletedEventHandler(object sender, InsertClientContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertClientContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertClientContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateClientContactCompletedEventHandler(object sender, UpdateClientContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClientContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClientContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateClientContactFollowUpStatusCompletedEventHandler(object sender, UpdateClientContactFollowUpStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClientContactFollowUpStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClientContactFollowUpStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteClientContactCompletedEventHandler(object sender, DeleteClientContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteClientContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteClientContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PrepareForContactHistoryCompletedEventHandler(object sender, PrepareForContactHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareForContactHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareForContactHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PrepareForContactHistoryByUserOrSupervisorCompletedEventHandler(object sender, PrepareForContactHistoryByUserOrSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareForContactHistoryByUserOrSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareForContactHistoryByUserOrSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveContactAnalysisCompletedEventHandler(object sender, RetrieveContactAnalysisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveContactAnalysisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveContactAnalysisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveCallReportCompletedEventHandler(object sender, RetrieveCallReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCallReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCallReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveCallReportByUserOrSupervisorCompletedEventHandler(object sender, RetrieveCallReportByUserOrSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCallReportByUserOrSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCallReportByUserOrSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveCallReportDetailCompletedEventHandler(object sender, RetrieveCallReportDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCallReportDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCallReportDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveCallReportProjectDetailCompletedEventHandler(object sender, RetrieveCallReportProjectDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCallReportProjectDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCallReportProjectDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveClientAnalysisCompletedEventHandler(object sender, RetrieveClientAnalysisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveClientAnalysisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveClientAnalysisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PrepareForClientAnalysisCompletedEventHandler(object sender, PrepareForClientAnalysisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareForClientAnalysisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareForClientAnalysisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PrepareForClientAnalysisByUserOrSupervisorCompletedEventHandler(object sender, PrepareForClientAnalysisByUserOrSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareForClientAnalysisByUserOrSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareForClientAnalysisByUserOrSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveContactEntryForTodayCompletedEventHandler(object sender, RetrieveContactEntryForTodayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveContactEntryForTodayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveContactEntryForTodayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveCallReportByProjectNameCompletedEventHandler(object sender, RetrieveCallReportByProjectNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCallReportByProjectNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCallReportByProjectNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveCallReportByProjectNameByUserOrSupervisorCompletedEventHandler(object sender, RetrieveCallReportByProjectNameByUserOrSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCallReportByProjectNameByUserOrSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCallReportByProjectNameByUserOrSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveContactHistoryByProjNameCompletedEventHandler(object sender, RetrieveContactHistoryByProjNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveContactHistoryByProjNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveContactHistoryByProjNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveContactAnalysisByProjectNameCompletedEventHandler(object sender, RetrieveContactAnalysisByProjectNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveContactAnalysisByProjectNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveContactAnalysisByProjectNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveCommissionEarnedByClientAcctNoCompletedEventHandler(object sender, RetrieveCommissionEarnedByClientAcctNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCommissionEarnedByClientAcctNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCommissionEarnedByClientAcctNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveCashAndEquivalentByUserAcctNoCompletedEventHandler(object sender, RetrieveCashAndEquivalentByUserAcctNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCashAndEquivalentByUserAcctNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCashAndEquivalentByUserAcctNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveAvailableFundsByUserAcctNoCompletedEventHandler(object sender, RetrieveAvailableFundsByUserAcctNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveAvailableFundsByUserAcctNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveAvailableFundsByUserAcctNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveClientServiceTypeByClientAcctNoCompletedEventHandler(object sender, RetrieveClientServiceTypeByClientAcctNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveClientServiceTypeByClientAcctNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveClientServiceTypeByClientAcctNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PrepareForContactToFollowUpCompletedEventHandler(object sender, PrepareForContactToFollowUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareForContactToFollowUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareForContactToFollowUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591